; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\rtd.o --asm_dir=.\ --list_dir=.\ --depend=.\rtd.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I..\ -I..\..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\..\Utilities\STM32_EVAL -I..\..\..\Utilities\STM32_EVAL\Common -I..\..\..\Utilities\STM32_EVAL\STM3210E_EVAL -I..\RTD -ID:\Keil_v5\ARM\RV31\INC -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=514 -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210E_EVAL --omf_browse=.\rtd.crf ..\rtd.c]
                          THUMB

                          AREA ||i.LoadFromFlash||, CODE, READONLY, ALIGN=2

                  LoadFromFlash PROC
;;;90     }
;;;91     void LoadFromFlash(void)
000000  b508              PUSH     {r3,lr}
;;;92     {
;;;93     		u8 temp=0x00;
000002  2000              MOVS     r0,#0
000004  f88d0000          STRB     r0,[sp,#0]
;;;94     		
;;;95     		SPI_Flash_Read((u8*)&temp,300,sizeof(temp));
000008  2201              MOVS     r2,#1
00000a  f44f7196          MOV      r1,#0x12c
00000e  4668              MOV      r0,sp
000010  f7fffffe          BL       SPI_Flash_Read
;;;96     	   
;;;97     	  if(temp==0x5a)
000014  f89d0000          LDRB     r0,[sp,#0]
000018  285a              CMP      r0,#0x5a
00001a  d006              BEQ      |L1.42|
;;;98     		{
;;;99     			SPI_Flash_Read((u8*)&ADS1220GainCorrection_1,100,sizeof(ADS1220GainCorrection_1));
;;;100    			SPI_Flash_Read((u8*)&ADS1220GainCorrection_2,200,sizeof(ADS1220GainCorrection_2));
;;;101    		}
;;;102    		else
;;;103    		{
;;;104    			ADS1220GainCorrection_1=1.0;
00001c  4908              LDR      r1,|L1.64|
00001e  f04f507e          MOV      r0,#0x3f800000
;;;105    			ADS1220GainCorrection_2=1.0;
000022  6008              STR      r0,[r1,#0]  ; ADS1220GainCorrection_1
000024  4907              LDR      r1,|L1.68|
000026  6008              STR      r0,[r1,#0]  ; ADS1220GainCorrection_2
;;;106    		}
;;;107    	
;;;108    }
000028  bd08              POP      {r3,pc}
                  |L1.42|
00002a  2204              MOVS     r2,#4                 ;99
00002c  2164              MOVS     r1,#0x64              ;99
00002e  4804              LDR      r0,|L1.64|
000030  f7fffffe          BL       SPI_Flash_Read
000034  2204              MOVS     r2,#4                 ;100
000036  21c8              MOVS     r1,#0xc8              ;100
000038  4802              LDR      r0,|L1.68|
00003a  f7fffffe          BL       SPI_Flash_Read
00003e  bd08              POP      {r3,pc}
;;;109    void rtd_process_1(void)
                          ENDP

                  |L1.64|
                          DCD      ADS1220GainCorrection_1
                  |L1.68|
                          DCD      ADS1220GainCorrection_2

                          AREA ||i.RTD_OffsetCal||, CODE, READONLY, ALIGN=2

                  RTD_OffsetCal PROC
;;;15     
;;;16     void RTD_OffsetCal(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;17     {
;;;18     	unsigned char calibrateCount = 0;
000004  2500              MOVS     r5,#0
000006  b086              SUB      sp,sp,#0x18           ;17
;;;19     	static unsigned char tempData_1[3];
;;;20     	static unsigned char tempData_2[3];
;;;21     
;;;22     	
;;;23     	Setup_ADS1220 (ADS1220_MUX_SHORTED, ADS1220_OP_MODE_NORMAL,
000008  f04f0a01          MOV      r10,#1
00000c  f04f090a          MOV      r9,#0xa
000010  f8cda014          STR      r10,[sp,#0x14]
000014  f04f0880          MOV      r8,#0x80
000018  f8cd9000          STR      r9,[sp,#0]
00001c  e9cd5801          STRD     r5,r8,[sp,#4]
000020  2604              MOVS     r6,#4
000022  270c              MOVS     r7,#0xc
000024  e9cd7603          STRD     r7,r6,[sp,#0xc]
000028  462c              MOV      r4,r5
00002a  462b              MOV      r3,r5
00002c  462a              MOV      r2,r5
00002e  4629              MOV      r1,r5
000030  20e0              MOVS     r0,#0xe0
000032  f7fffffe          BL       Setup_ADS1220
;;;24                        ADS1220_CONVERSION_SINGLE_SHOT, ADS1220_DATA_RATE_20SPS, ADS1220_GAIN_32, ADS1220_USE_PGA, //pt100 32, pt1000 16 
;;;25                        ADS1220_IDAC1_AIN3, ADS1220_IDAC2_AIN2, ADS1220_IDAC_CURRENT_250_UA, 1); //pt100 250ua, pt1000 50ua
;;;26         Setup_ADS1220 (ADS1220_MUX_SHORTED, ADS1220_OP_MODE_NORMAL,
000036  2102              MOVS     r1,#2
000038  f8cd9000          STR      r9,[sp,#0]
00003c  e9cd6104          STRD     r6,r1,[sp,#0x10]
000040  9703              STR      r7,[sp,#0xc]
000042  2300              MOVS     r3,#0
000044  e9cd4801          STRD     r4,r8,[sp,#4]
000048  461a              MOV      r2,r3
00004a  4619              MOV      r1,r3
00004c  20e0              MOVS     r0,#0xe0
00004e  f7fffffe          BL       Setup_ADS1220
;;;27                        ADS1220_CONVERSION_SINGLE_SHOT, ADS1220_DATA_RATE_20SPS, ADS1220_GAIN_32, ADS1220_USE_PGA,
;;;28                        ADS1220_IDAC1_AIN3, ADS1220_IDAC2_AIN2, ADS1220_IDAC_CURRENT_250_UA, 2);//pt100 250ua, pt1000 50ua
;;;29         calibrateCount = 0;
;;;30         delay_ms(10);
000052  200a              MOVS     r0,#0xa
000054  f7fffffe          BL       delay_ms
;;;31     		PEout(0)=0;
000058  4e23              LDR      r6,|L2.232|
00005a  f8c64180          STR      r4,[r6,#0x180]
;;;32     		PEout(1)=0;
00005e  f8c64184          STR      r4,[r6,#0x184]
;;;33         ADS1220_Start (1);
000062  2001              MOVS     r0,#1
000064  f7fffffe          BL       ADS1220_Start
;;;34         while (calibrateCount < 10)
;;;35         {
;;;36             while (!ReadConversionData_1);   // Wait for Data Ready interrupt
000068  4f20              LDR      r7,|L2.236|
                  |L2.106|
00006a  7839              LDRB     r1,[r7,#0]  ; ReadConversionData_1
00006c  2900              CMP      r1,#0
00006e  d0fc              BEQ      |L2.106|
;;;37             ReadConversionData_1 = 0;
000070  703c              STRB     r4,[r7,#0]
;;;38             ADS1220_Get_Conversion_Data ((unsigned char *)tempData_1, 1);   // Get the raw data
000072  2101              MOVS     r1,#1
000074  481e              LDR      r0,|L2.240|
000076  f7fffffe          BL       ADS1220_Get_Conversion_Data
;;;39             ADS1220_Offset_Calibrate_Data ((unsigned char *)tempData_1, 1);        // Send results to calibration function
00007a  2101              MOVS     r1,#1
00007c  481c              LDR      r0,|L2.240|
00007e  f7fffffe          BL       ADS1220_Offset_Calibrate_Data
000082  1c6d              ADDS     r5,r5,#1
;;;40             calibrateCount++;
000084  b2ed              UXTB     r5,r5
;;;41             
;;;42             // Start next calibration reading?
;;;43             if (calibrateCount < 10){
000086  2d0a              CMP      r5,#0xa
000088  d206              BCS      |L2.152|
;;;44                 delay_ms(30);
00008a  201e              MOVS     r0,#0x1e
00008c  f7fffffe          BL       delay_ms
;;;45                 ADS1220_Start (1);
000090  2001              MOVS     r0,#1
000092  f7fffffe          BL       ADS1220_Start
000096  e7e8              B        |L2.106|
                  |L2.152|
;;;46             }
;;;47         }
;;;48         PEout(0)=1;
000098  4657              MOV      r7,r10
00009a  f8c6a180          STR      r10,[r6,#0x180]
;;;49         
;;;50         calibrateCount = 0;
00009e  2500              MOVS     r5,#0
;;;51         ADS1220_Start (2);
0000a0  2002              MOVS     r0,#2
0000a2  f7fffffe          BL       ADS1220_Start
0000a6  46a0              MOV      r8,r4
;;;52         while (calibrateCount < 10)
;;;53         {
;;;54             while (!ReadConversionData_2);   // Wait for Data Ready interrupt
0000a8  4c12              LDR      r4,|L2.244|
                  |L2.170|
0000aa  7820              LDRB     r0,[r4,#0]  ; ReadConversionData_2
0000ac  2800              CMP      r0,#0
0000ae  d0fc              BEQ      |L2.170|
;;;55             ReadConversionData_2 = 0;
;;;56             ADS1220_Get_Conversion_Data ((unsigned char *)tempData_2, 2);   // Get the raw data
0000b0  480f              LDR      r0,|L2.240|
0000b2  f8848000          STRB     r8,[r4,#0]            ;55
0000b6  2102              MOVS     r1,#2
0000b8  1cc0              ADDS     r0,r0,#3
0000ba  f7fffffe          BL       ADS1220_Get_Conversion_Data
;;;57             ADS1220_Offset_Calibrate_Data ((unsigned char *)tempData_2, 2);        // Send results to calibration function
0000be  480c              LDR      r0,|L2.240|
0000c0  2102              MOVS     r1,#2
0000c2  1cc0              ADDS     r0,r0,#3
0000c4  f7fffffe          BL       ADS1220_Offset_Calibrate_Data
0000c8  1c6d              ADDS     r5,r5,#1
;;;58             calibrateCount++;
0000ca  b2ed              UXTB     r5,r5
;;;59             
;;;60             // Start next calibration reading?
;;;61             if (calibrateCount < 10){
0000cc  2d0a              CMP      r5,#0xa
0000ce  d206              BCS      |L2.222|
;;;62                 delay_ms(30);
0000d0  201e              MOVS     r0,#0x1e
0000d2  f7fffffe          BL       delay_ms
;;;63                 ADS1220_Start (2);
0000d6  2002              MOVS     r0,#2
0000d8  f7fffffe          BL       ADS1220_Start
0000dc  e7e5              B        |L2.170|
                  |L2.222|
;;;64             }
;;;65         }
;;;66         PEout(0)=1;
0000de  f8c67180          STR      r7,[r6,#0x180]
;;;67     }
0000e2  b006              ADD      sp,sp,#0x18
0000e4  e8bd87f0          POP      {r4-r10,pc}
;;;68     
                          ENDP

                  |L2.232|
                          DCD      0x42230000
                  |L2.236|
                          DCD      ReadConversionData_1
                  |L2.240|
                          DCD      ||.data||
                  |L2.244|
                          DCD      ReadConversionData_2

                          AREA ||i.RTD_Start||, CODE, READONLY, ALIGN=2

                  RTD_Start PROC
;;;68     
;;;69     void RTD_Start(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;70     {
000004  b086              SUB      sp,sp,#0x18
;;;71     		Setup_ADS1220 (ADS1220_MUX_AIN0_AIN1, ADS1220_OP_MODE_NORMAL,
000006  2504              MOVS     r5,#4
000008  2101              MOVS     r1,#1
00000a  2400              MOVS     r4,#0
00000c  e9cd5104          STRD     r5,r1,[sp,#0x10]
000010  260c              MOVS     r6,#0xc
000012  f04f0880          MOV      r8,#0x80
000016  270a              MOVS     r7,#0xa
000018  e9cd7400          STRD     r7,r4,[sp,#0]
00001c  e9cd8602          STRD     r8,r6,[sp,#8]
000020  4623              MOV      r3,r4
000022  462a              MOV      r2,r5
000024  4621              MOV      r1,r4
000026  4620              MOV      r0,r4
000028  f7fffffe          BL       Setup_ADS1220
;;;72                        ADS1220_CONVERSION_CONTINUOUS, ADS1220_DATA_RATE_20SPS, ADS1220_GAIN_32, ADS1220_USE_PGA, //pt100 32 pt1000 16
;;;73                        ADS1220_IDAC1_AIN3, ADS1220_IDAC2_AIN2, ADS1220_IDAC_CURRENT_250_UA, 1); // pt100 250 pt1000 50
;;;74         Setup_ADS1220 (ADS1220_MUX_AIN0_AIN1, ADS1220_OP_MODE_NORMAL,
00002c  2102              MOVS     r1,#2
00002e  e9cd5104          STRD     r5,r1,[sp,#0x10]
000032  2300              MOVS     r3,#0
000034  e9cd7400          STRD     r7,r4,[sp,#0]
000038  e9cd8602          STRD     r8,r6,[sp,#8]
00003c  2204              MOVS     r2,#4
00003e  4619              MOV      r1,r3
000040  4618              MOV      r0,r3
000042  f7fffffe          BL       Setup_ADS1220
;;;75                        ADS1220_CONVERSION_CONTINUOUS, ADS1220_DATA_RATE_20SPS, ADS1220_GAIN_32, ADS1220_USE_PGA,
;;;76                        ADS1220_IDAC1_AIN3, ADS1220_IDAC2_AIN2, ADS1220_IDAC_CURRENT_250_UA, 2); // pt100 250 pt1000 50
;;;77         
;;;78         ReadConversionData_1 = 0;
000046  4806              LDR      r0,|L3.96|
000048  7004              STRB     r4,[r0,#0]
;;;79         ReadConversionData_2 = 0;
00004a  4806              LDR      r0,|L3.100|
00004c  7004              STRB     r4,[r0,#0]
;;;80         ADS1220_Start (1);      // Only one start needed for Continuous Mode
00004e  2001              MOVS     r0,#1
000050  f7fffffe          BL       ADS1220_Start
;;;81         ADS1220_Start (2);      // Only one start needed for Continuous Mode
000054  b006              ADD      sp,sp,#0x18
000056  2002              MOVS     r0,#2
000058  e8bd41f0          POP      {r4-r8,lr}
00005c  f7ffbffe          B.W      ADS1220_Start
;;;82     }
;;;83     
                          ENDP

                  |L3.96|
                          DCD      ReadConversionData_1
                  |L3.100|
                          DCD      ReadConversionData_2

                          AREA ||i.RTD_init||, CODE, READONLY, ALIGN=1

                  RTD_init PROC
;;;9      
;;;10     void RTD_init(void)
000000  b510              PUSH     {r4,lr}
;;;11     {
;;;12     	IO_SpiInit();
000002  f7fffffe          BL       IO_SpiInit
;;;13     	LoadFromFlash();
000006  e8bd4010          POP      {r4,lr}
00000a  f7ffbffe          B.W      LoadFromFlash
;;;14     }
;;;15     
                          ENDP


                          AREA ||i.SaveToFlash||, CODE, READONLY, ALIGN=2

                  SaveToFlash PROC
;;;83     
;;;84     void SaveToFlash(void)
000000  b508              PUSH     {r3,lr}
;;;85     {
;;;86     	  u8 temp=0x5a;
000002  205a              MOVS     r0,#0x5a
000004  f88d0000          STRB     r0,[sp,#0]
;;;87     		SPI_Flash_Write((u8*)&ADS1220GainCorrection_1,100,sizeof(ADS1220GainCorrection_1));
000008  2204              MOVS     r2,#4
00000a  2164              MOVS     r1,#0x64
00000c  4807              LDR      r0,|L5.44|
00000e  f7fffffe          BL       SPI_Flash_Write
;;;88     		SPI_Flash_Write((u8*)&ADS1220GainCorrection_2,200,sizeof(ADS1220GainCorrection_2));
000012  2204              MOVS     r2,#4
000014  21c8              MOVS     r1,#0xc8
000016  4806              LDR      r0,|L5.48|
000018  f7fffffe          BL       SPI_Flash_Write
;;;89     		SPI_Flash_Write((u8*)&temp,300,sizeof(temp));
00001c  2201              MOVS     r2,#1
00001e  f44f7196          MOV      r1,#0x12c
000022  4668              MOV      r0,sp
000024  f7fffffe          BL       SPI_Flash_Write
;;;90     }
000028  bd08              POP      {r3,pc}
;;;91     void LoadFromFlash(void)
                          ENDP

00002a  0000              DCW      0x0000
                  |L5.44|
                          DCD      ADS1220GainCorrection_1
                  |L5.48|
                          DCD      ADS1220GainCorrection_2

                          AREA ||i.rtd_process_1||, CODE, READONLY, ALIGN=2

                  rtd_process_1 PROC
;;;108    }
;;;109    void rtd_process_1(void)
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;110    {
;;;111    
;;;112    		PEout(1)=0;
000004  f8dfb0fc          LDR      r11,|L6.260|
000008  f04f0a00          MOV      r10,#0
00000c  4654              MOV      r4,r10
00000e  f8cba184          STR      r10,[r11,#0x184]
;;;113    		ADS1220_Get_Conversion_Data_Calibrated ((unsigned char *)tempData_1, 1);   // Get the temperature data with the calibration value subtracted
000012  2101              MOVS     r1,#1
000014  483c              LDR      r0,|L6.264|
000016  f7fffffe          BL       ADS1220_Get_Conversion_Data_Calibrated
;;;114    
;;;115    		code_1 = (((long)tempData_1[0] << 16) + ((long)tempData_1[1] << 8) + (long)tempData_1[2]);   // take 3 bytes of voltage returned and place in word
00001a  483b              LDR      r0,|L6.264|
00001c  7801              LDRB     r1,[r0,#0]  ; tempData_1
00001e  7842              LDRB     r2,[r0,#1]  ; tempData_1
000020  0409              LSLS     r1,r1,#16
000022  7880              LDRB     r0,[r0,#2]  ; tempData_1
000024  eb012102          ADD      r1,r1,r2,LSL #8
000028  4408              ADD      r0,r0,r1
00002a  4938              LDR      r1,|L6.268|
;;;116    		temperature_1 = (long)(interpolateTemperatureValue (code_1, PgaGainLevel_1, PT100) * 1000.0);    // Get the temperature and convert into millidegrees C
00002c  2200              MOVS     r2,#0
00002e  6008              STR      r0,[r1,#0]  ; code_1
000030  4937              LDR      r1,|L6.272|
000032  6809              LDR      r1,[r1,#0]  ; PgaGainLevel_1
000034  f7fffffe          BL       interpolateTemperatureValue
000038  f7fffffe          BL       __aeabi_f2d
00003c  2200              MOVS     r2,#0
00003e  4b35              LDR      r3,|L6.276|
000040  f7fffffe          BL       __aeabi_dmul
000044  f7fffffe          BL       __aeabi_d2iz
000048  f8df90cc          LDR      r9,|L6.280|
;;;117    																																																		// pt100 when using
;;;118    		ReadConversionData_1 = 0;                        // Clear flag so next conversion is read again.
00004c  4933              LDR      r1,|L6.284|
;;;119    
;;;120    		if (avgCount_1 == 0)
00004e  f8df80d0          LDR      r8,|L6.288|
000052  f8c90000          STR      r0,[r9,#0]            ;118  ; temperature_1
000056  700c              STRB     r4,[r1,#0]            ;118
000058  f8987000          LDRB     r7,[r8,#0]  ; avgCount_1
;;;121    		{
;;;122    			avgTemp_1 = (float)temperature_1;
00005c  4c31              LDR      r4,|L6.292|
;;;123    			avgRaw_1 = (float)rawData_1;
00005e  4d32              LDR      r5,|L6.296|
000060  4e32              LDR      r6,|L6.300|
000062  b19f              CBZ      r7,|L6.140|
;;;124    		}
;;;125    		else
;;;126    		{
;;;127    			avgTemp_1 += (float)temperature_1;
000064  f7fffffe          BL       __aeabi_i2f
000068  6821              LDR      r1,[r4,#0]  ; avgTemp_1
00006a  f7fffffe          BL       __aeabi_fadd
;;;128    			avgRaw_1 += (float)rawData_1;
00006e  6020              STR      r0,[r4,#0]  ; avgTemp_1
000070  6830              LDR      r0,[r6,#0]  ; rawData_1
000072  f7fffffe          BL       __aeabi_i2f
000076  6829              LDR      r1,[r5,#0]  ; avgRaw_1
000078  f7fffffe          BL       __aeabi_fadd
                  |L6.124|
00007c  1c7f              ADDS     r7,r7,#1
;;;129    			
;;;130    		}
;;;131    		avgCount_1 ++;
00007e  b2f9              UXTB     r1,r7
000080  6028              STR      r0,[r5,#0]  ; avgRaw_1
000082  f8881000          STRB     r1,[r8,#0]
;;;132    
;;;133    		if (avgCount_1 == SAMPLES)
000086  2914              CMP      r1,#0x14
000088  d007              BEQ      |L6.154|
00008a  e035              B        |L6.248|
                  |L6.140|
00008c  f7fffffe          BL       __aeabi_i2f
000090  6020              STR      r0,[r4,#0]            ;123  ; avgTemp_1
000092  6830              LDR      r0,[r6,#0]            ;123  ; rawData_1
000094  f7fffffe          BL       __aeabi_i2f
000098  e7f0              B        |L6.124|
                  |L6.154|
;;;134    		{
;;;135    			avgCount_1 = 0;
00009a  f888a000          STRB     r10,[r8,#0]
;;;136    			temperature_1 = (long)(avgTemp_1 / SAMPLES);
00009e  f8df8090          LDR      r8,|L6.304|
0000a2  4657              MOV      r7,r10                ;135
0000a4  4641              MOV      r1,r8
0000a6  6820              LDR      r0,[r4,#0]  ; avgTemp_1
0000a8  f7fffffe          BL       __aeabi_fdiv
0000ac  f7fffffe          BL       __aeabi_f2iz
;;;137    			if(temperature_1>200000)temperature_1=0;
0000b0  4a20              LDR      r2,|L6.308|
0000b2  f8c90000          STR      r0,[r9,#0]  ; temperature_1
0000b6  4290              CMP      r0,r2
0000b8  dd01              BLE      |L6.190|
0000ba  f8c97000          STR      r7,[r9,#0]  ; temperature_1
                  |L6.190|
;;;138    			rawData_1 = (long)(avgRaw_1 / SAMPLES);
0000be  4641              MOV      r1,r8
0000c0  6828              LDR      r0,[r5,#0]  ; avgRaw_1
0000c2  f7fffffe          BL       __aeabi_fdiv
0000c6  f7fffffe          BL       __aeabi_f2iz
;;;139    
;;;140    			if(!PDin(14))
0000ca  4c1b              LDR      r4,|L6.312|
0000cc  6030              STR      r0,[r6,#0]  ; rawData_1
0000ce  f8d41138          LDR      r1,[r4,#0x138]
0000d2  b989              CBNZ     r1,|L6.248|
;;;141    			{
;;;142    					GainCal_1 = 0;
0000d4  4919              LDR      r1,|L6.316|
0000d6  700f              STRB     r7,[r1,#0]
;;;143    					 ADS1220GainCorrection_1 = MeasuredGainCodeValue_Pt100_150R / rawData_1; // MeasuredGainCodeValue_Pt100_150R or MeasuredGainCodeValue_Pt1000_1K5
0000d8  f7fffffe          BL       __aeabi_i2f
0000dc  4601              MOV      r1,r0
0000de  4818              LDR      r0,|L6.320|
0000e0  6800              LDR      r0,[r0,#0]  ; MeasuredGainCodeValue_Pt100_150R
0000e2  f7fffffe          BL       __aeabi_fdiv
0000e6  4917              LDR      r1,|L6.324|
;;;144    					SaveToFlash();
0000e8  6008              STR      r0,[r1,#0]  ; ADS1220GainCorrection_1
0000ea  f7fffffe          BL       SaveToFlash
;;;145    				while(!PDin(14));
0000ee  bf00              NOP      
                  |L6.240|
0000f0  f8d40138          LDR      r0,[r4,#0x138]
0000f4  2800              CMP      r0,#0
0000f6  d0fb              BEQ      |L6.240|
                  |L6.248|
;;;146    			}
;;;147    		}
;;;148    		PEout(1)=1;
0000f8  2101              MOVS     r1,#1
0000fa  f8cb1184          STR      r1,[r11,#0x184]
;;;149    }
0000fe  e8bd9ff0          POP      {r4-r12,pc}
;;;150    
                          ENDP

000102  0000              DCW      0x0000
                  |L6.260|
                          DCD      0x42230000
                  |L6.264|
                          DCD      tempData_1
                  |L6.268|
                          DCD      code_1
                  |L6.272|
                          DCD      PgaGainLevel_1
                  |L6.276|
                          DCD      0x408f4000
                  |L6.280|
                          DCD      temperature_1
                  |L6.284|
                          DCD      ReadConversionData_1
                  |L6.288|
                          DCD      avgCount_1
                  |L6.292|
                          DCD      avgTemp_1
                  |L6.296|
                          DCD      avgRaw_1
                  |L6.300|
                          DCD      rawData_1
                  |L6.304|
                          DCD      0x41a00000
                  |L6.308|
                          DCD      0x00030d40
                  |L6.312|
                          DCD      0x42228000
                  |L6.316|
                          DCD      GainCal_1
                  |L6.320|
                          DCD      MeasuredGainCodeValue_Pt100_150R
                  |L6.324|
                          DCD      ADS1220GainCorrection_1

                          AREA ||i.rtd_process_2||, CODE, READONLY, ALIGN=2

                  rtd_process_2 PROC
;;;150    
;;;151    void rtd_process_2(void)
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;152    {
;;;153    
;;;154    	PEout(0)=0;
000004  f8dfb0fc          LDR      r11,|L7.260|
000008  f04f0a00          MOV      r10,#0
00000c  4654              MOV      r4,r10
00000e  f8cba180          STR      r10,[r11,#0x180]
;;;155    	ADS1220_Get_Conversion_Data_Calibrated ((unsigned char *)tempData_2, 2);   // Get the temperature data with the calibration value subtracted
000012  2102              MOVS     r1,#2
000014  483c              LDR      r0,|L7.264|
000016  f7fffffe          BL       ADS1220_Get_Conversion_Data_Calibrated
;;;156    
;;;157    	code_2 = (((long)tempData_2[0] << 16) + ((long)tempData_2[1] << 8) + (long)tempData_2[2]);   // take 3 bytes of voltage returned and place in word
00001a  483b              LDR      r0,|L7.264|
00001c  7801              LDRB     r1,[r0,#0]  ; tempData_2
00001e  7842              LDRB     r2,[r0,#1]  ; tempData_2
000020  0409              LSLS     r1,r1,#16
000022  7880              LDRB     r0,[r0,#2]  ; tempData_2
000024  eb012102          ADD      r1,r1,r2,LSL #8
000028  4408              ADD      r0,r0,r1
00002a  4938              LDR      r1,|L7.268|
;;;158    
;;;159    	temperature_2 = (long)(interpolateTemperatureValue (code_2, PgaGainLevel_2, PT100) * 1000.0);    // Get the temperature and convert into millidegrees C
00002c  2200              MOVS     r2,#0
00002e  6008              STR      r0,[r1,#0]  ; code_2
000030  4937              LDR      r1,|L7.272|
000032  6809              LDR      r1,[r1,#0]  ; PgaGainLevel_2
000034  f7fffffe          BL       interpolateTemperatureValue
000038  f7fffffe          BL       __aeabi_f2d
00003c  2200              MOVS     r2,#0
00003e  4b35              LDR      r3,|L7.276|
000040  f7fffffe          BL       __aeabi_dmul
000044  f7fffffe          BL       __aeabi_d2iz
000048  f8df90cc          LDR      r9,|L7.280|
;;;160    
;;;161    	ReadConversionData_2 = 0;                        // Clear flag so next conversion is read again.
00004c  4933              LDR      r1,|L7.284|
;;;162    
;;;163    	if (avgCount_2 == 0)
00004e  f8df80d0          LDR      r8,|L7.288|
000052  f8c90000          STR      r0,[r9,#0]            ;161  ; temperature_2
000056  700c              STRB     r4,[r1,#0]            ;161
000058  f8987000          LDRB     r7,[r8,#0]  ; avgCount_2
;;;164    	{
;;;165    		avgTemp_2 = (float)temperature_2;
00005c  4c31              LDR      r4,|L7.292|
;;;166    		avgRaw_2 = (float)rawData_2;
00005e  4d32              LDR      r5,|L7.296|
000060  4e32              LDR      r6,|L7.300|
000062  b19f              CBZ      r7,|L7.140|
;;;167    	}
;;;168    	else
;;;169    	{
;;;170    	 avgTemp_2 += (float)temperature_2;
000064  f7fffffe          BL       __aeabi_i2f
000068  6821              LDR      r1,[r4,#0]  ; avgTemp_2
00006a  f7fffffe          BL       __aeabi_fadd
;;;171    		avgRaw_2 += (float)rawData_2;
00006e  6020              STR      r0,[r4,#0]  ; avgTemp_2
000070  6830              LDR      r0,[r6,#0]  ; rawData_2
000072  f7fffffe          BL       __aeabi_i2f
000076  6829              LDR      r1,[r5,#0]  ; avgRaw_2
000078  f7fffffe          BL       __aeabi_fadd
                  |L7.124|
00007c  1c7f              ADDS     r7,r7,#1
;;;172    	}
;;;173    	avgCount_2 ++;
00007e  b2f9              UXTB     r1,r7
000080  6028              STR      r0,[r5,#0]  ; avgRaw_2
000082  f8881000          STRB     r1,[r8,#0]
;;;174    
;;;175    	if (avgCount_2 == SAMPLES)
000086  2914              CMP      r1,#0x14
000088  d007              BEQ      |L7.154|
00008a  e035              B        |L7.248|
                  |L7.140|
00008c  f7fffffe          BL       __aeabi_i2f
000090  6020              STR      r0,[r4,#0]            ;166  ; avgTemp_2
000092  6830              LDR      r0,[r6,#0]            ;166  ; rawData_2
000094  f7fffffe          BL       __aeabi_i2f
000098  e7f0              B        |L7.124|
                  |L7.154|
;;;176    	{
;;;177    		avgCount_2 = 0;
00009a  f888a000          STRB     r10,[r8,#0]
;;;178    		temperature_2 = (long)(avgTemp_2 / SAMPLES);
00009e  f8df8090          LDR      r8,|L7.304|
0000a2  4657              MOV      r7,r10                ;177
0000a4  4641              MOV      r1,r8
0000a6  6820              LDR      r0,[r4,#0]  ; avgTemp_2
0000a8  f7fffffe          BL       __aeabi_fdiv
0000ac  f7fffffe          BL       __aeabi_f2iz
;;;179    		if(temperature_2>200000)temperature_2=0;
0000b0  4a20              LDR      r2,|L7.308|
0000b2  f8c90000          STR      r0,[r9,#0]  ; temperature_2
0000b6  4290              CMP      r0,r2
0000b8  dd01              BLE      |L7.190|
0000ba  f8c97000          STR      r7,[r9,#0]  ; temperature_2
                  |L7.190|
;;;180    		rawData_2 = (long)(avgRaw_2 / SAMPLES);
0000be  4641              MOV      r1,r8
0000c0  6828              LDR      r0,[r5,#0]  ; avgRaw_2
0000c2  f7fffffe          BL       __aeabi_fdiv
0000c6  f7fffffe          BL       __aeabi_f2iz
;;;181    		if(!PDin(15))
0000ca  4c1b              LDR      r4,|L7.312|
0000cc  6030              STR      r0,[r6,#0]  ; rawData_2
0000ce  f8d4113c          LDR      r1,[r4,#0x13c]
0000d2  b989              CBNZ     r1,|L7.248|
;;;182    		{
;;;183    				GainCal_2 = 0;
0000d4  4919              LDR      r1,|L7.316|
0000d6  700f              STRB     r7,[r1,#0]
;;;184    				ADS1220GainCorrection_2 = MeasuredGainCodeValue_Pt100_150R / rawData_2;
0000d8  f7fffffe          BL       __aeabi_i2f
0000dc  4601              MOV      r1,r0
0000de  4818              LDR      r0,|L7.320|
0000e0  6800              LDR      r0,[r0,#0]  ; MeasuredGainCodeValue_Pt100_150R
0000e2  f7fffffe          BL       __aeabi_fdiv
0000e6  4917              LDR      r1,|L7.324|
;;;185    				SaveToFlash();
0000e8  6008              STR      r0,[r1,#0]  ; ADS1220GainCorrection_2
0000ea  f7fffffe          BL       SaveToFlash
;;;186    				while(!PDin(15));              
0000ee  bf00              NOP      
                  |L7.240|
0000f0  f8d4013c          LDR      r0,[r4,#0x13c]
0000f4  2800              CMP      r0,#0
0000f6  d0fb              BEQ      |L7.240|
                  |L7.248|
;;;187    		}
;;;188    	}
;;;189    	PEout(0)=1;
0000f8  2101              MOVS     r1,#1
0000fa  f8cb1180          STR      r1,[r11,#0x180]
;;;190        
;;;191    }
0000fe  e8bd9ff0          POP      {r4-r12,pc}
;;;192    
                          ENDP

000102  0000              DCW      0x0000
                  |L7.260|
                          DCD      0x42230000
                  |L7.264|
                          DCD      tempData_2
                  |L7.268|
                          DCD      code_2
                  |L7.272|
                          DCD      PgaGainLevel_2
                  |L7.276|
                          DCD      0x408f4000
                  |L7.280|
                          DCD      temperature_2
                  |L7.284|
                          DCD      ReadConversionData_2
                  |L7.288|
                          DCD      avgCount_2
                  |L7.292|
                          DCD      avgTemp_2
                  |L7.296|
                          DCD      avgRaw_2
                  |L7.300|
                          DCD      rawData_2
                  |L7.304|
                          DCD      0x41a00000
                  |L7.308|
                          DCD      0x00030d40
                  |L7.312|
                          DCD      0x42228000
                  |L7.316|
                          DCD      GainCal_2
                  |L7.320|
                          DCD      MeasuredGainCodeValue_Pt100_150R
                  |L7.324|
                          DCD      ADS1220GainCorrection_2

                          AREA ||.data||, DATA, ALIGN=0

                  |symbol_number.24|
000000  000000            DCB      0x00,0x00,0x00
                  |symbol_number.25|
000003  00                DCB      0x00
000004  0000              DCB      0x00,0x00
