; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -odio.o --asm_dir=.\ --list_dir=.\ --depend=dio.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\ -I..\..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\..\Utilities\STM32_EVAL -I..\..\..\Utilities\STM32_EVAL\Common -I..\..\..\Utilities\STM32_EVAL\STM3210E_EVAL -I..\RTD -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210E_EVAL --omf_browse=dio.crf ..\Dio.c]
                          THUMB

                          AREA ||i.DI_onechannel||, CODE, READONLY, ALIGN=2

                  DI_onechannel PROC
;;;44     
;;;45     u8 DI_onechannel(u8 channel)
000000  b510              PUSH     {r4,lr}
;;;46     {
000002  4604              MOV      r4,r0
;;;47       u16 DiMap;
;;;48       u8  DiValue=0; 
;;;49     //  char temp[8];
;;;50       DiMap=GetDiMap(DI_data); 
000004  4803              LDR      r0,|L1.20|
000006  f7fffffe          BL       GetDiMap
;;;51       DiMap>>=channel;
00000a  40e0              LSRS     r0,r0,r4
;;;52       DiValue =DiMap&0x01;	  
00000c  f0000001          AND      r0,r0,#1
;;;53     
;;;54       return DiValue;
;;;55     
;;;56     }
000010  bd10              POP      {r4,pc}
;;;57     void DO_onechannel(u8 channel,u8 State)
                          ENDP

000012  0000              DCW      0x0000
                  |L1.20|
                          DCD      DI_data

                          AREA ||i.DO_onechannel||, CODE, READONLY, ALIGN=2

                  DO_onechannel PROC
;;;56     }
;;;57     void DO_onechannel(u8 channel,u8 State)
000000  b4f0              PUSH     {r4-r7}
;;;58     {
;;;59     	switch(State)
;;;60     	{
;;;61     		case SpdtOFF:
;;;62     								switch(channel)
;;;63     								{
;;;64     									case 1:GPIO_ResetBits(Do_Port,Do1_Pin);break;
000002  4a18              LDR      r2,|L2.100|
000004  f44f7380          MOV      r3,#0x100
;;;65     									case 2:GPIO_ResetBits(Do_Port,Do2_Pin);break;
000008  1554              ASRS     r4,r2,#21
;;;66     									case 3:GPIO_ResetBits(Do_Port,Do3_Pin);break;
00000a  1515              ASRS     r5,r2,#20
;;;67     									case 4:GPIO_ResetBits(Do_Port,Do4_Pin);break;
00000c  14d6              ASRS     r6,r2,#19
00000e  b171              CBZ      r1,|L2.46|
000010  2901              CMP      r1,#1                 ;59
000012  d125              BNE      |L2.96|
;;;68     
;;;69     									default:break;									
;;;70     								}
;;;71     								break;
;;;72     		case SpdtON:
;;;73     								switch(channel)
000014  2801              CMP      r0,#1
000016  d01d              BEQ      |L2.84|
000018  2802              CMP      r0,#2
00001a  d01d              BEQ      |L2.88|
00001c  2803              CMP      r0,#3
00001e  d01d              BEQ      |L2.92|
000020  2804              CMP      r0,#4
000022  d11d              BNE      |L2.96|
;;;74     								{
;;;75     									case 1:GPIO_SetBits(Do_Port,Do1_Pin);break;
;;;76     									case 2:GPIO_SetBits(Do_Port,Do2_Pin);break;
;;;77     									case 3:GPIO_SetBits(Do_Port,Do3_Pin);break;
;;;78     									case 4:GPIO_SetBits(Do_Port,Do4_Pin);break;
000024  4631              MOV      r1,r6
                  |L2.38|
000026  bcf0              POP      {r4-r7}
000028  4610              MOV      r0,r2
00002a  f7ffbffe          B.W      GPIO_SetBits
                  |L2.46|
00002e  2801              CMP      r0,#1                 ;62
000030  d00a              BEQ      |L2.72|
000032  2802              CMP      r0,#2                 ;62
000034  d00a              BEQ      |L2.76|
000036  2803              CMP      r0,#3                 ;62
000038  d00a              BEQ      |L2.80|
00003a  2804              CMP      r0,#4                 ;62
00003c  d110              BNE      |L2.96|
00003e  4631              MOV      r1,r6                 ;67
                  |L2.64|
000040  bcf0              POP      {r4-r7}               ;67
000042  4610              MOV      r0,r2                 ;67
000044  f7ffbffe          B.W      GPIO_ResetBits
                  |L2.72|
000048  4619              MOV      r1,r3                 ;64
00004a  e7f9              B        |L2.64|
                  |L2.76|
00004c  4621              MOV      r1,r4                 ;65
00004e  e7f7              B        |L2.64|
                  |L2.80|
000050  4629              MOV      r1,r5                 ;66
000052  e7f5              B        |L2.64|
                  |L2.84|
000054  4619              MOV      r1,r3                 ;75
000056  e7e6              B        |L2.38|
                  |L2.88|
000058  4621              MOV      r1,r4                 ;76
00005a  e7e4              B        |L2.38|
                  |L2.92|
00005c  4629              MOV      r1,r5                 ;77
00005e  e7e2              B        |L2.38|
                  |L2.96|
;;;79     
;;;80     									default:break;									
;;;81     								}
;;;82     								break;
;;;83     		default:break;
;;;84     	}
;;;85     }
000060  bcf0              POP      {r4-r7}
000062  4770              BX       lr
;;;86     
                          ENDP

                  |L2.100|
                          DCD      0x40011400

                          AREA ||i.DiGpioCfg||, CODE, READONLY, ALIGN=2

                  DiGpioCfg PROC
;;;3      
;;;4      void DiGpioCfg(void)
000000  b508              PUSH     {r3,lr}
;;;5      {
;;;6      	GPIO_InitTypeDef  GPIO_InitStructure;
;;;7      	
;;;8      	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOE, ENABLE);	 //使能PE端口时钟
000002  2101              MOVS     r1,#1
000004  2040              MOVS     r0,#0x40
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;9      
;;;10     	GPIO_InitStructure.GPIO_Pin = Di0_Pin|Di1_Pin|Di2_Pin|Di3_Pin;				 // 端口配置
00000a  f44f6070          MOV      r0,#0xf00
00000e  f8ad0000          STRH     r0,[sp,#0]
;;;11     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING; 		 //输入
000012  2004              MOVS     r0,#4
000014  f88d0003          STRB     r0,[sp,#3]
;;;12     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
000018  2001              MOVS     r0,#1
00001a  f88d0002          STRB     r0,[sp,#2]
;;;13     	GPIO_Init(Di_Port, &GPIO_InitStructure);
00001e  4669              MOV      r1,sp
000020  4801              LDR      r0,|L3.40|
000022  f7fffffe          BL       GPIO_Init
;;;14     }
000026  bd08              POP      {r3,pc}
;;;15     
                          ENDP

                  |L3.40|
                          DCD      0x40011800

                          AREA ||i.DioCfg||, CODE, READONLY, ALIGN=1

                  DioCfg PROC
;;;86     
;;;87     void DioCfg(void)
000000  b510              PUSH     {r4,lr}
;;;88     {
;;;89     	DoMuxGpioCfg();
000002  f7fffffe          BL       DoMuxGpioCfg
;;;90     	DiGpioCfg();
000006  e8bd4010          POP      {r4,lr}
00000a  f7ffbffe          B.W      DiGpioCfg
;;;91     }
;;;92     
                          ENDP


                          AREA ||i.DoMuxGpioCfg||, CODE, READONLY, ALIGN=2

                  DoMuxGpioCfg PROC
;;;15     
;;;16     void DoMuxGpioCfg(void)
000000  b538              PUSH     {r3-r5,lr}
;;;17     {
;;;18     	GPIO_InitTypeDef  GPIO_InitStructure;
;;;19     
;;;20     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOD, ENABLE);	 //使能PA端口时钟
000002  2101              MOVS     r1,#1
000004  2020              MOVS     r0,#0x20
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;21     	
;;;22     	GPIO_ResetBits(Do_Port,Do1_Pin|Do2_Pin|Do3_Pin|Do4_Pin);
00000a  4d0a              LDR      r5,|L5.52|
00000c  f44f6470          MOV      r4,#0xf00
000010  4621              MOV      r1,r4
000012  4628              MOV      r0,r5
000014  f7fffffe          BL       GPIO_ResetBits
;;;23     	
;;;24     	GPIO_InitStructure.GPIO_Pin = Do1_Pin|Do2_Pin|Do3_Pin|Do4_Pin;				 // 端口配置
000018  f8ad4000          STRH     r4,[sp,#0]
;;;25     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP; 		 //推挽输出
00001c  2010              MOVS     r0,#0x10
00001e  f88d0003          STRB     r0,[sp,#3]
;;;26     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
000022  2001              MOVS     r0,#1
000024  f88d0002          STRB     r0,[sp,#2]
;;;27     	GPIO_Init(Do_Port, &GPIO_InitStructure);
000028  4669              MOV      r1,sp
00002a  4628              MOV      r0,r5
00002c  f7fffffe          BL       GPIO_Init
;;;28     }
000030  bd38              POP      {r3-r5,pc}
;;;29     
                          ENDP

000032  0000              DCW      0x0000
                  |L5.52|
                          DCD      0x40011400

                          AREA ||i.GetDiMap||, CODE, READONLY, ALIGN=2

                  GetDiMap PROC
;;;29     
;;;30     u8 GetDiMap(char* DiREG)
000000  b510              PUSH     {r4,lr}
;;;31     {
000002  4604              MOV      r4,r0
;;;32     	u16 temp; 
;;;33     	u8 i;
;;;34     	temp=GPIO_ReadInputData(Di_Port);
000004  4806              LDR      r0,|L6.32|
000006  f7fffffe          BL       GPIO_ReadInputData
;;;35     	
;;;36     	for(i=0;i<8;i++)
00000a  2100              MOVS     r1,#0
                  |L6.12|
;;;37     	{
;;;38     		DiREG[i]=temp&0x01;       
00000c  f0000201          AND      r2,r0,#1
000010  5462              STRB     r2,[r4,r1]
000012  1c49              ADDS     r1,r1,#1              ;36
;;;39     		temp>>=1;
000014  0840              LSRS     r0,r0,#1
000016  b2c9              UXTB     r1,r1                 ;36
000018  2908              CMP      r1,#8                 ;36
00001a  d3f7              BCC      |L6.12|
;;;40     	}
;;;41     
;;;42     	return (temp>>8)&0xff;
00001c  0a00              LSRS     r0,r0,#8
;;;43     }
00001e  bd10              POP      {r4,pc}
;;;44     
                          ENDP

                  |L6.32|
                          DCD      0x40011800
