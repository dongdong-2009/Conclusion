; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -oprotocol.o --asm_dir=.\ --list_dir=.\ --depend=protocol.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\ -I..\..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\..\Utilities\STM32_EVAL -I..\..\..\Utilities\STM32_EVAL\Common -I..\..\..\Utilities\STM32_EVAL\STM3210E_EVAL -I..\RTD -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210E_EVAL --omf_browse=protocol.crf ..\protocol.c]
                          THUMB

                          AREA ||i.CheckReceivedData||, CODE, READONLY, ALIGN=1

                  CheckReceivedData PROC
;;;70     ///////////////////////////////////////////////////
;;;71     int CheckReceivedData(u8* dataBuffer)
000000  7881              LDRB     r1,[r0,#2]
;;;72     {
;;;73        int i; 
;;;74        long result = 0;
000002  2200              MOVS     r2,#0
;;;75        int checkCode = 0;
;;;76         if(dataBuffer[2]!=8)
000004  2908              CMP      r1,#8
000006  d10f              BNE      |L1.40|
;;;77     	return 0;
;;;78     
;;;79        for(i=3;i<21;i++)
000008  2103              MOVS     r1,#3
                  |L1.10|
;;;80        {
;;;81           result += dataBuffer[i];
00000a  5c43              LDRB     r3,[r0,r1]
00000c  1c49              ADDS     r1,r1,#1              ;79
00000e  441a              ADD      r2,r2,r3
000010  2915              CMP      r1,#0x15              ;79
000012  dbfa              BLT      |L1.10|
;;;82     
;;;83        }
;;;84        checkCode = result % 100;
000014  2164              MOVS     r1,#0x64
000016  fb92f3f1          SDIV     r3,r2,r1
00001a  fb012113          MLS      r1,r1,r3,r2
;;;85        if(checkCode == dataBuffer[21])
00001e  7d40              LDRB     r0,[r0,#0x15]
000020  4288              CMP      r0,r1
000022  d101              BNE      |L1.40|
;;;86        return 1;
000024  2001              MOVS     r0,#1
;;;87        else
;;;88        return 0;
;;;89     }
000026  4770              BX       lr
                  |L1.40|
000028  2000              MOVS     r0,#0                 ;88
00002a  4770              BX       lr
;;;90     
                          ENDP


                          AREA ||i.CheckSentData||, CODE, READONLY, ALIGN=1

                  CheckSentData PROC
;;;96     ///////////////////////////////////////////////////
;;;97     char CheckSentData(u8* dataBuffer)
000000  2200              MOVS     r2,#0
;;;98     {
;;;99        int i; 
;;;100       long result = 0;
;;;101       char checkCode;
;;;102    
;;;103       for(i=3;i<21;i++)
000002  2103              MOVS     r1,#3
                  |L2.4|
;;;104       {
;;;105          result += dataBuffer[i];
000004  5c43              LDRB     r3,[r0,r1]
000006  1c49              ADDS     r1,r1,#1              ;103
000008  441a              ADD      r2,r2,r3
00000a  2915              CMP      r1,#0x15              ;103
00000c  dbfa              BLT      |L2.4|
;;;106       }
;;;107       checkCode = result % 100;
00000e  2064              MOVS     r0,#0x64
000010  fb92f1f0          SDIV     r1,r2,r0
000014  fb002011          MLS      r0,r0,r1,r2
000018  b2c0              UXTB     r0,r0
;;;108    
;;;109       return checkCode;
;;;110    }
00001a  4770              BX       lr
;;;111    
                          ENDP


                          AREA ||i.DataProcess||, CODE, READONLY, ALIGN=1

                  DataProcess PROC
;;;121    
;;;122    void DataProcess(void)
000000  f7ffbffe          B.W      readPorts
;;;123    {
;;;124    	 readPorts();
;;;125    
;;;126    }
;;;127    
                          ENDP


                          AREA ||i.PacketHeaderAnalysis||, CODE, READONLY, ALIGN=2

                  PacketHeaderAnalysis PROC
;;;19     ///////////////////////////////////////////////////
;;;20     int PacketHeaderAnalysis(u8 * receivedData)
000000  b51e              PUSH     {r1-r4,lr}
;;;21     {
;;;22        int i;
;;;23        int isTrue = 0; 	//校验是否正确 1--true
;;;24        unsigned int address;
;;;25        char data[LENGTH];
;;;26        for(i=0;i<LENGTH;i++)
000002  2100              MOVS     r1,#0
000004  466a              MOV      r2,sp                 ;25
                  |L4.6|
;;;27             data[i] = receivedData[i];
000006  5c43              LDRB     r3,[r0,r1]
000008  5453              STRB     r3,[r2,r1]
00000a  1c49              ADDS     r1,r1,#1              ;26
00000c  290a              CMP      r1,#0xa               ;26
00000e  dbfa              BLT      |L4.6|
;;;28        ReceivedCheckCode = data[6];
000010  4c12              LDR      r4,|L4.92|
000012  f89d1006          LDRB     r1,[sp,#6]
;;;29        ReceivedDataLength = data[7]*100 + data[8];
;;;30        isTrue = CheckReceivedData(receivedData+LENGTH); 
000016  300a              ADDS     r0,r0,#0xa
000018  7021              STRB     r1,[r4,#0]            ;28
00001a  f89d1007          LDRB     r1,[sp,#7]            ;29
00001e  f89d2008          LDRB     r2,[sp,#8]            ;29
000022  eb0103c1          ADD      r3,r1,r1,LSL #3       ;29
000026  eb031101          ADD      r1,r3,r1,LSL #4       ;29
00002a  eb020181          ADD      r1,r2,r1,LSL #2       ;29
00002e  60a1              STR      r1,[r4,#8]  ; ReceivedDataLength
000030  f7fffffe          BL       CheckReceivedData
;;;31     
;;;32        if(isTrue)
000034  2800              CMP      r0,#0
000036  d00d              BEQ      |L4.84|
;;;33        {   
;;;34          address = data[2]*100 + data[3];
000038  f89d1002          LDRB     r1,[sp,#2]
00003c  f89d0003          LDRB     r0,[sp,#3]
000040  eb0102c1          ADD      r2,r1,r1,LSL #3
000044  eb021101          ADD      r1,r2,r1,LSL #4
000048  eb000081          ADD      r0,r0,r1,LSL #2
;;;35     
;;;36     	  if(MCUaddress==address)
00004c  6861              LDR      r1,[r4,#4]  ; MCUaddress
00004e  4281              CMP      r1,r0
000050  d101              BNE      |L4.86|
;;;37     	   { 
;;;38     		 return 1;
000052  2001              MOVS     r0,#1
                  |L4.84|
;;;39     	    }
;;;40      
;;;41      	  return 0;   
;;;42        }
;;;43        return 0;   
;;;44     }
000054  bd1e              POP      {r1-r4,pc}
                  |L4.86|
000056  2000              MOVS     r0,#0                 ;41
000058  bd1e              POP      {r1-r4,pc}
;;;45     
                          ENDP

00005a  0000              DCW      0x0000
                  |L4.92|
                          DCD      ||.data||

                          AREA ||i.PacketHeaderGeneration||, CODE, READONLY, ALIGN=1

                  PacketHeaderGeneration PROC
;;;53     ///////////////////////////////////////////////////////////////////////////////////////
;;;54     void PacketHeaderGeneration(u8* sentData,u8 selectedBoard)
000000  b570              PUSH     {r4-r6,lr}
;;;55     {
;;;56        sentData[0] = 0x55;
000002  2655              MOVS     r6,#0x55
000004  7006              STRB     r6,[r0,#0]
000006  4604              MOV      r4,r0                 ;55
;;;57        sentData[1] = selectedBoard;
000008  7041              STRB     r1,[r0,#1]
;;;58       
;;;59        sentData[2] = 0x08;	  
00000a  2008              MOVS     r0,#8
00000c  70a0              STRB     r0,[r4,#2]
00000e  460d              MOV      r5,r1                 ;55
;;;60     
;;;61        sentData[21] = CheckSentData(sentData);		  //CheckCode
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       CheckSentData
000016  7560              STRB     r0,[r4,#0x15]
;;;62        sentData[22] = selectedBoard;                   //Length
000018  75a5              STRB     r5,[r4,#0x16]
;;;63        sentData[23] = 0x55; 
00001a  75e6              STRB     r6,[r4,#0x17]
;;;64     }
00001c  bd70              POP      {r4-r6,pc}
;;;65     
                          ENDP


                          AREA ||i.SendProcess||, CODE, READONLY, ALIGN=2

                  SendProcess PROC
;;;136    
;;;137    void SendProcess(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;138    {
;;;139      
;;;140       unsigned int i=0;
;;;141       //USART_ITConfig(USART1, USART_IT_RXNE, DISABLE); 
;;;142       USART_ITConfig(USART1,USART_IT_TXE,ENABLE);	  
000004  f8df9088          LDR      r9,|L6.144|
000008  2400              MOVS     r4,#0                 ;140
00000a  2201              MOVS     r2,#1
00000c  f2407127          MOV      r1,#0x727
000010  4648              MOV      r0,r9
000012  f7fffffe          BL       USART_ITConfig
;;;143       PacketHeaderGeneration(SentBuffer,ReceivedBuffer[1]);
000016  4d1f              LDR      r5,|L6.148|
000018  481f              LDR      r0,|L6.152|
00001a  7869              LDRB     r1,[r5,#1]  ; ReceivedBuffer
00001c  f7fffffe          BL       PacketHeaderGeneration
;;;144       delay_ms(2) ;
000020  2002              MOVS     r0,#2
000022  f7fffffe          BL       delay_ms
;;;145    
;;;146       switch(ReceivedBuffer[1])
000026  7868              LDRB     r0,[r5,#1]  ; ReceivedBuffer
000028  2700              MOVS     r7,#0                 ;140
;;;147       {
;;;148         case 0x66: 
;;;149    
;;;150    	 DE1receBufferFill(ReceivedBuffer);
;;;151    	 DEsendBufferFill(SentBuffer);
;;;152    	 DE1=0;
00002a  4d1c              LDR      r5,|L6.156|
00002c  4e1a              LDR      r6,|L6.152|
00002e  f04f0801          MOV      r8,#1                 ;142
000032  2866              CMP      r0,#0x66              ;146
000034  d002              BEQ      |L6.60|
000036  2877              CMP      r0,#0x77              ;146
000038  d113              BNE      |L6.98|
00003a  e01a              B        |L6.114|
                  |L6.60|
00003c  4815              LDR      r0,|L6.148|
00003e  f7fffffe          BL       DE1receBufferFill
000042  4815              LDR      r0,|L6.152|
000044  f7fffffe          BL       DEsendBufferFill
000048  f8c571ac          STR      r7,[r5,#0x1ac]
                  |L6.76|
;;;153    	 for(i=0;i<24;i++)
;;;154    	 {
;;;155    	    Usart_SendChar(SentBuffer[i]); 
00004c  5d30              LDRB     r0,[r6,r4]
00004e  f7fffffe          BL       Usart_SendChar
000052  1c64              ADDS     r4,r4,#1              ;153
000054  2c18              CMP      r4,#0x18              ;153
000056  d3f9              BCC      |L6.76|
                  |L6.88|
;;;156    	 
;;;157    	 }
;;;158    	 delay_ms(2);
000058  2002              MOVS     r0,#2
00005a  f7fffffe          BL       delay_ms
;;;159    	 DE1=1;
00005e  f8c581ac          STR      r8,[r5,#0x1ac]
                  |L6.98|
;;;160    	 break;	          
;;;161    
;;;162    	 case 0x77: 
;;;163    	 
;;;164    	 REreceBufferFill(ReceivedBuffer);
;;;165    	 REsendBufferFill(SentBuffer);
;;;166         DE1=0;
;;;167    	 for(i=0;i<24;i++)
;;;168    	 {
;;;169    	    Usart_SendChar(SentBuffer[i]); 
;;;170    	 
;;;171    	 }
;;;172    	 delay_ms(2);
;;;173    	 DE1=1;
;;;174    
;;;175    	 break;	
;;;176    	 default:break;
;;;177       }
;;;178       USART_ITConfig(USART1, USART_IT_RXNE, ENABLE); 
000062  4648              MOV      r0,r9
000064  e8bd47f0          POP      {r4-r10,lr}
000068  2201              MOVS     r2,#1
00006a  f2405125          MOV      r1,#0x525
00006e  f7ffbffe          B.W      USART_ITConfig
                  |L6.114|
000072  4808              LDR      r0,|L6.148|
000074  f7fffffe          BL       REreceBufferFill
000078  4807              LDR      r0,|L6.152|
00007a  f7fffffe          BL       REsendBufferFill
00007e  f8c571ac          STR      r7,[r5,#0x1ac]        ;166
                  |L6.130|
000082  5d30              LDRB     r0,[r6,r4]            ;169
000084  f7fffffe          BL       Usart_SendChar
000088  1c64              ADDS     r4,r4,#1              ;167
00008a  2c18              CMP      r4,#0x18              ;167
00008c  d3f9              BCC      |L6.130|
00008e  e7e3              B        |L6.88|
;;;179    }
;;;180    
                          ENDP

                  |L6.144|
                          DCD      0x40013800
                  |L6.148|
                          DCD      ReceivedBuffer
                  |L6.152|
                          DCD      SentBuffer
                  |L6.156|
                          DCD      0x42210000

                          AREA ||i.getDecHighByte||, CODE, READONLY, ALIGN=2

                  getDecHighByte PROC
;;;218    }
;;;219    char getDecHighByte(float data)
000000  b510              PUSH     {r4,lr}
;;;220    {
;;;221        char decByte = 0;
;;;222    	if(data<0)
000002  f1104fff          CMN      r0,#0x7f800000
000006  d301              BCC      |L7.12|
;;;223    	   data = data * -1;
000008  f0804000          EOR      r0,r0,#0x80000000
                  |L7.12|
;;;224    	decByte = ((int)(data*10000) % 10000) / 100;
00000c  4907              LDR      r1,|L7.44|
00000e  f7fffffe          BL       __aeabi_fmul
000012  f7fffffe          BL       __aeabi_f2iz
000016  f2427110          MOV      r1,#0x2710
00001a  fb90f2f1          SDIV     r2,r0,r1
00001e  fb010012          MLS      r0,r1,r2,r0
000022  2164              MOVS     r1,#0x64
000024  fb90f0f1          SDIV     r0,r0,r1
000028  b2c0              UXTB     r0,r0
;;;225    	return decByte;
;;;226    }
00002a  bd10              POP      {r4,pc}
;;;227    char getDecLowByte(float data)
                          ENDP

                  |L7.44|
                          DCD      0x461c4000

                          AREA ||i.getDecLowByte||, CODE, READONLY, ALIGN=2

                  getDecLowByte PROC
;;;226    }
;;;227    char getDecLowByte(float data)
000000  b510              PUSH     {r4,lr}
;;;228    {
;;;229        char decByte = 0;
;;;230    	if(data<0)
000002  f1104fff          CMN      r0,#0x7f800000
000006  d301              BCC      |L8.12|
;;;231    	   data = data * -1;
000008  f0804000          EOR      r0,r0,#0x80000000
                  |L8.12|
;;;232    	decByte = (int)(data*10000) % 100;
00000c  4905              LDR      r1,|L8.36|
00000e  f7fffffe          BL       __aeabi_fmul
000012  f7fffffe          BL       __aeabi_f2iz
000016  2164              MOVS     r1,#0x64
000018  fb90f2f1          SDIV     r2,r0,r1
00001c  fb010012          MLS      r0,r1,r2,r0
000020  b2c0              UXTB     r0,r0
;;;233    	return decByte;
;;;234    }
000022  bd10              POP      {r4,pc}
;;;235    
                          ENDP

                  |L8.36|
                          DCD      0x461c4000

                          AREA ||i.getIntHighByte||, CODE, READONLY, ALIGN=1

                  getIntHighByte PROC
;;;195    
;;;196    char getIntHighByte(float data)
000000  b510              PUSH     {r4,lr}
;;;197    {
;;;198        char highByte = 0;
;;;199        int temp = (int)data;
000002  f7fffffe          BL       __aeabi_f2iz
;;;200    	if(temp<0)
;;;201    	{
;;;202    	   temp = temp * -1;
;;;203       	   highByte = temp/100;
000006  2164              MOVS     r1,#0x64
000008  2800              CMP      r0,#0                 ;200
00000a  da06              BGE      |L9.26|
00000c  4240              RSBS     r0,r0,#0              ;202
00000e  fb90f0f1          SDIV     r0,r0,r1
000012  b2c0              UXTB     r0,r0
;;;204    	   highByte = highByte | 0x80;
000014  f0400080          ORR      r0,r0,#0x80
;;;205    	}
;;;206    	else
;;;207    	   highByte = temp/100;
;;;208    	return highByte;
;;;209    }
000018  bd10              POP      {r4,pc}
                  |L9.26|
00001a  fb90f0f1          SDIV     r0,r0,r1              ;207
00001e  b2c0              UXTB     r0,r0                 ;207
000020  bd10              POP      {r4,pc}
;;;210    char getIntLowByte(float data)
                          ENDP


                          AREA ||i.getIntLowByte||, CODE, READONLY, ALIGN=1

                  getIntLowByte PROC
;;;209    }
;;;210    char getIntLowByte(float data)
000000  b510              PUSH     {r4,lr}
;;;211    {
;;;212       char lowByte = 0;
;;;213       int temp = (int)data;
000002  f7fffffe          BL       __aeabi_f2iz
;;;214       if(temp<0)
000006  2800              CMP      r0,#0
000008  da00              BGE      |L10.12|
;;;215          temp = temp * -1;
00000a  4240              RSBS     r0,r0,#0
                  |L10.12|
;;;216    	lowByte = temp % 100;
00000c  2164              MOVS     r1,#0x64
00000e  fb90f2f1          SDIV     r2,r0,r1
000012  fb010012          MLS      r0,r1,r2,r0
000016  b2c0              UXTB     r0,r0
;;;217       return lowByte;
;;;218    }
000018  bd10              POP      {r4,pc}
;;;219    char getDecHighByte(float data)
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  ReceivedCheckCode
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  MCUaddress
                          DCD      0x00000000
                  ReceivedDataLength
                          DCD      0x00000000

                          AREA ||area_number.14||, DATA, ALIGN=0

                          EXPORTAS ||area_number.14||, ||.data||
                  SentCheckCode
000000  00                DCB      0x00

                          AREA ||area_number.15||, DATA, ALIGN=2

                          EXPORTAS ||area_number.15||, ||.data||
                  SentDataLength
                          DCD      0x00000000
