; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -omuxcfg.o --asm_dir=.\ --list_dir=.\ --depend=muxcfg.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\ -I..\..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\..\Utilities\STM32_EVAL -I..\..\..\Utilities\STM32_EVAL\Common -I..\..\..\Utilities\STM32_EVAL\STM3210E_EVAL -I..\RTD -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210E_EVAL --omf_browse=muxcfg.crf MuxCfg.c]
                          THUMB

                          AREA ||i.AiChannelSetMux||, CODE, READONLY, ALIGN=2

                  AiChannelSetMux PROC
;;;26     }
;;;27     void AiChannelSetMux(u8 Channel,u8 MuxVoltageOrCurrent)
000000  4a14              LDR      r2,|L1.84|
;;;28     {
;;;29     	switch(MuxVoltageOrCurrent)
000002  b169              CBZ      r1,|L1.32|
000004  2901              CMP      r1,#1
000006  d123              BNE      |L1.80|
;;;30     	{
;;;31     		
;;;32     		case MUX_CURRENT:
;;;33     			     switch(Channel)
;;;34     					 {
;;;35     						 case 1:GPIO_ResetBits(Ai1Mux_Port,Ai1Mux_Pin);break;
;;;36     						 case 2:GPIO_ResetBits(Ai2Mux_Port,Ai2Mux_Pin);break;
;;;37     						 case 3:GPIO_ResetBits(Ai3Mux_Port,Ai3Mux_Pin);break;
;;;38     						 case 4:GPIO_ResetBits(Ai4Mux_Port,Ai4Mux_Pin);break;
;;;39     						 default:break;
;;;40     					 }
;;;41     					 break;
;;;42     		case MUX_VOLTAGE:
;;;43     			     switch(Channel)
000008  2801              CMP      r0,#1
00000a  d01b              BEQ      |L1.68|
00000c  2802              CMP      r0,#2
00000e  d01b              BEQ      |L1.72|
000010  2803              CMP      r0,#3
000012  d01b              BEQ      |L1.76|
000014  2804              CMP      r0,#4
000016  d11b              BNE      |L1.80|
;;;44     					 {
;;;45     						 case 1:GPIO_SetBits(Ai1Mux_Port,Ai1Mux_Pin);break;
;;;46     						 case 2:GPIO_SetBits(Ai2Mux_Port,Ai2Mux_Pin);break;
;;;47     						 case 3:GPIO_SetBits(Ai3Mux_Port,Ai3Mux_Pin);break;
;;;48     						 case 4:GPIO_SetBits(Ai4Mux_Port,Ai4Mux_Pin);break;
000018  2140              MOVS     r1,#0x40
                  |L1.26|
00001a  4610              MOV      r0,r2
00001c  f7ffbffe          B.W      GPIO_SetBits
                  |L1.32|
000020  2801              CMP      r0,#1                 ;33
000022  d009              BEQ      |L1.56|
000024  2802              CMP      r0,#2                 ;33
000026  d009              BEQ      |L1.60|
000028  2803              CMP      r0,#3                 ;33
00002a  d009              BEQ      |L1.64|
00002c  2804              CMP      r0,#4                 ;33
00002e  d10f              BNE      |L1.80|
000030  2140              MOVS     r1,#0x40              ;38
                  |L1.50|
000032  4610              MOV      r0,r2                 ;38
000034  f7ffbffe          B.W      GPIO_ResetBits
                  |L1.56|
000038  2108              MOVS     r1,#8                 ;35
00003a  e7fa              B        |L1.50|
                  |L1.60|
00003c  2110              MOVS     r1,#0x10              ;36
00003e  e7f8              B        |L1.50|
                  |L1.64|
000040  2120              MOVS     r1,#0x20              ;37
000042  e7f6              B        |L1.50|
                  |L1.68|
000044  2108              MOVS     r1,#8                 ;45
000046  e7e8              B        |L1.26|
                  |L1.72|
000048  2110              MOVS     r1,#0x10              ;46
00004a  e7e6              B        |L1.26|
                  |L1.76|
00004c  2120              MOVS     r1,#0x20              ;47
00004e  e7e4              B        |L1.26|
                  |L1.80|
;;;49     						 default:break;
;;;50     					 }
;;;51     					 break;
;;;52     		default:break;
;;;53     	}
;;;54     }
000050  4770              BX       lr
;;;55     void AoChannelSetMux(u8 Channel,u8 MuxVoltageOrCurrent)
                          ENDP

000052  0000              DCW      0x0000
                  |L1.84|
                          DCD      0x40011800

                          AREA ||i.AiMuxGpioCfg||, CODE, READONLY, ALIGN=2

                  AiMuxGpioCfg PROC
;;;39     
;;;2      void AiMuxGpioCfg(void)
000000  b538              PUSH     {r3-r5,lr}
;;;3      {
;;;4      	GPIO_InitTypeDef  GPIO_InitStructure;
;;;5      
;;;6      	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOF, ENABLE);	 //使能PR端口时钟
000002  2101              MOVS     r1,#1
000004  2080              MOVS     r0,#0x80
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;7      	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOE, ENABLE);	 //使能PE端口时钟
00000a  2101              MOVS     r1,#1
00000c  2040              MOVS     r0,#0x40
00000e  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;8      
;;;9      	GPIO_InitStructure.GPIO_Pin = Ai1Mux_Pin|Ai2Mux_Pin|Ai3Mux_Pin|Ai4Mux_Pin;				 // 端口配置
000012  2078              MOVS     r0,#0x78
000014  f8ad0000          STRH     r0,[sp,#0]
;;;10     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP; 		 //推挽输出
000018  2010              MOVS     r0,#0x10
00001a  f88d0003          STRB     r0,[sp,#3]
;;;11     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
00001e  2001              MOVS     r0,#1
;;;12     	GPIO_Init(GPIOE, &GPIO_InitStructure);
000020  4c05              LDR      r4,|L2.56|
000022  f88d0002          STRB     r0,[sp,#2]            ;11
000026  4669              MOV      r1,sp
000028  4620              MOV      r0,r4
00002a  f7fffffe          BL       GPIO_Init
;;;13     	GPIO_SetBits(GPIOE,Ai1Mux_Pin|Ai2Mux_Pin|Ai3Mux_Pin|Ai4Mux_Pin);
00002e  2178              MOVS     r1,#0x78
000030  4620              MOV      r0,r4
000032  f7fffffe          BL       GPIO_SetBits
;;;14     }
000036  bd38              POP      {r3-r5,pc}
;;;15     void AoMuxGpioCfg(void)
                          ENDP

                  |L2.56|
                          DCD      0x40011800

                          AREA ||i.AoChannelSetMux||, CODE, READONLY, ALIGN=2

                  AoChannelSetMux PROC
;;;54     }
;;;55     void AoChannelSetMux(u8 Channel,u8 MuxVoltageOrCurrent)
000000  4a14              LDR      r2,|L3.84|
;;;56     {
;;;57     	switch(MuxVoltageOrCurrent)
000002  b169              CBZ      r1,|L3.32|
000004  2901              CMP      r1,#1
000006  d123              BNE      |L3.80|
;;;58     	{
;;;59     		case MUX_CURRENT:
;;;60     			     switch(Channel)
;;;61     					 {
;;;62     						 case 1:GPIO_ResetBits(Ao1Mux_Port,Ao1Mux_Pin);break;
;;;63     						 case 2:GPIO_ResetBits(Ao2Mux_Port,Ao2Mux_Pin);break;
;;;64     						 case 3:GPIO_ResetBits(Ao3Mux_Port,Ao3Mux_Pin);break;
;;;65     						 case 4:GPIO_ResetBits(Ao4Mux_Port,Ao4Mux_Pin);break;
;;;66     						 default:break;
;;;67     					 }
;;;68     					 break;
;;;69     		case MUX_VOLTAGE:
;;;70     			     switch(Channel)
000008  2801              CMP      r0,#1
00000a  d01b              BEQ      |L3.68|
00000c  2802              CMP      r0,#2
00000e  d01b              BEQ      |L3.72|
000010  2803              CMP      r0,#3
000012  d01b              BEQ      |L3.76|
000014  2804              CMP      r0,#4
000016  d11b              BNE      |L3.80|
;;;71     					 {
;;;72     						 case 1:GPIO_SetBits(Ao1Mux_Port,Ao1Mux_Pin);break;
;;;73     						 case 2:GPIO_SetBits(Ao2Mux_Port,Ao2Mux_Pin);break;
;;;74     						 case 3:GPIO_SetBits(Ao3Mux_Port,Ao3Mux_Pin);break;
;;;75     						 case 4:GPIO_SetBits(Ao4Mux_Port,Ao4Mux_Pin);break;
000018  2180              MOVS     r1,#0x80
                  |L3.26|
00001a  4610              MOV      r0,r2
00001c  f7ffbffe          B.W      GPIO_SetBits
                  |L3.32|
000020  2801              CMP      r0,#1                 ;60
000022  d009              BEQ      |L3.56|
000024  2802              CMP      r0,#2                 ;60
000026  d009              BEQ      |L3.60|
000028  2803              CMP      r0,#3                 ;60
00002a  d009              BEQ      |L3.64|
00002c  2804              CMP      r0,#4                 ;60
00002e  d10f              BNE      |L3.80|
000030  2180              MOVS     r1,#0x80              ;65
                  |L3.50|
000032  4610              MOV      r0,r2                 ;65
000034  f7ffbffe          B.W      GPIO_ResetBits
                  |L3.56|
000038  2110              MOVS     r1,#0x10              ;62
00003a  e7fa              B        |L3.50|
                  |L3.60|
00003c  2120              MOVS     r1,#0x20              ;63
00003e  e7f8              B        |L3.50|
                  |L3.64|
000040  2140              MOVS     r1,#0x40              ;64
000042  e7f6              B        |L3.50|
                  |L3.68|
000044  2110              MOVS     r1,#0x10              ;72
000046  e7e8              B        |L3.26|
                  |L3.72|
000048  2120              MOVS     r1,#0x20              ;73
00004a  e7e6              B        |L3.26|
                  |L3.76|
00004c  2140              MOVS     r1,#0x40              ;74
00004e  e7e4              B        |L3.26|
                  |L3.80|
;;;76     						 default:break;
;;;77     					 }
;;;78     					 break;
;;;79     		default:break;
;;;80     	}
;;;81     }
000050  4770              BX       lr
;;;82     void MuxGpioCfg(void)
                          ENDP

000052  0000              DCW      0x0000
                  |L3.84|
                          DCD      0x40011400

                          AREA ||i.AoMuxGpioCfg||, CODE, READONLY, ALIGN=2

                  AoMuxGpioCfg PROC
;;;14     }
;;;15     void AoMuxGpioCfg(void)
000000  b538              PUSH     {r3-r5,lr}
;;;16     {
;;;17     	GPIO_InitTypeDef  GPIO_InitStructure;
;;;18     
;;;19     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOD, ENABLE);	 //使能PA端口时钟
000002  2101              MOVS     r1,#1
000004  2020              MOVS     r0,#0x20
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;20     	GPIO_InitStructure.GPIO_Pin = Ao1Mux_Pin|Ao2Mux_Pin|Ao3Mux_Pin|Ao4Mux_Pin;				 // 端口配置
00000a  20f0              MOVS     r0,#0xf0
00000c  f8ad0000          STRH     r0,[sp,#0]
;;;21     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP; 		 //推挽输出
000010  2010              MOVS     r0,#0x10
000012  f88d0003          STRB     r0,[sp,#3]
;;;22     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
000016  2001              MOVS     r0,#1
;;;23     	GPIO_Init(GPIOD, &GPIO_InitStructure);
000018  4c05              LDR      r4,|L4.48|
00001a  f88d0002          STRB     r0,[sp,#2]            ;22
00001e  4669              MOV      r1,sp
000020  4620              MOV      r0,r4
000022  f7fffffe          BL       GPIO_Init
;;;24     	
;;;25     	GPIO_SetBits(GPIOD,Ao1Mux_Pin|Ao2Mux_Pin|Ao3Mux_Pin|Ao4Mux_Pin);
000026  21f0              MOVS     r1,#0xf0
000028  4620              MOV      r0,r4
00002a  f7fffffe          BL       GPIO_SetBits
;;;26     }
00002e  bd38              POP      {r3-r5,pc}
;;;27     void AiChannelSetMux(u8 Channel,u8 MuxVoltageOrCurrent)
                          ENDP

                  |L4.48|
                          DCD      0x40011400

                          AREA ||i.MuxGpioCfg||, CODE, READONLY, ALIGN=1

                  MuxGpioCfg PROC
;;;81     }
;;;82     void MuxGpioCfg(void)
000000  b510              PUSH     {r4,lr}
;;;83     {
;;;84     	AiMuxGpioCfg();
000002  f7fffffe          BL       AiMuxGpioCfg
;;;85     	AoMuxGpioCfg();
000006  e8bd4010          POP      {r4,lr}
00000a  f7ffbffe          B.W      AoMuxGpioCfg
;;;86     }
;;;87     
                          ENDP

