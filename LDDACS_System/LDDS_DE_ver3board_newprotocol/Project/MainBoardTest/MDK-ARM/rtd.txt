; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -ortd.o --asm_dir=.\ --list_dir=.\ --depend=rtd.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\ -I..\..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\..\Utilities\STM32_EVAL -I..\..\..\Utilities\STM32_EVAL\Common -I..\..\..\Utilities\STM32_EVAL\STM3210E_EVAL -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210E_EVAL --omf_browse=rtd.crf ..\rtd.c]
                          THUMB

                          AREA ||i.RTD_allchannels||, CODE, READONLY, ALIGN=2

                  RTD_allchannels PROC
;;;100    
;;;101    void RTD_allchannels(float* temperature)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;102    {
000004  4605              MOV      r5,r0
;;;103        uint8_t *dp;   
;;;104        int i;
;;;105        
;;;106        delay_rtd();
000006  f7fffffe          BL       delay_rtd
;;;107        dp = (void *)& rtd_bytes.b55;
;;;108        SPI_RTD_CS0_CLR();
00000a  f8df8060          LDR      r8,|L1.108|
00000e  4e16              LDR      r6,|L1.104|
000010  2180              MOVS     r1,#0x80
000012  4640              MOV      r0,r8
000014  f7fffffe          BL       GPIO_ResetBits
;;;109        delay_rtd();
000018  f7fffffe          BL       delay_rtd
;;;110        for (i = 0; i < sizeof(RTD_BYTES); ++i) 
;;;111    	{
;;;112            dp[i] = rtd_read_write_byte(cmd[i]);
00001c  4f14              LDR      r7,|L1.112|
00001e  2400              MOVS     r4,#0                 ;110
                  |L1.32|
000020  5d38              LDRB     r0,[r7,r4]
000022  f7fffffe          BL       rtd_read_write_byte
000026  5530              STRB     r0,[r6,r4]
;;;113            delay_rtd();
000028  f7fffffe          BL       delay_rtd
00002c  1c64              ADDS     r4,r4,#1              ;110
00002e  2c14              CMP      r4,#0x14              ;110
000030  d3f6              BCC      |L1.32|
;;;114        } 
;;;115        SPI_RTD_CS0_SET();
000032  2180              MOVS     r1,#0x80
000034  4640              MOV      r0,r8
000036  f7fffffe          BL       GPIO_SetBits
00003a  4e0b              LDR      r6,|L1.104|
;;;116    	for(i=0;i<4;i++)
;;;117    	{
;;;118        	temperature[i] =  rtd_bytes.temp[i]/1000.0;
00003c  4f0d              LDR      r7,|L1.116|
00003e  2400              MOVS     r4,#0                 ;116
                  |L1.64|
000040  eb060084          ADD      r0,r6,r4,LSL #2
000044  f8d00002          LDR      r0,[r0,#2]
000048  f7fffffe          BL       __aeabi_i2d
00004c  2200              MOVS     r2,#0
00004e  463b              MOV      r3,r7
000050  f7fffffe          BL       __aeabi_ddiv
000054  f7fffffe          BL       __aeabi_d2f
000058  f8450024          STR      r0,[r5,r4,LSL #2]
00005c  1c64              ADDS     r4,r4,#1              ;116
00005e  2c04              CMP      r4,#4                 ;116
000060  dbee              BLT      |L1.64|
;;;119    	}
;;;120    }
000062  e8bd81f0          POP      {r4-r8,pc}
;;;121    /*----------------------------------------local function definition---------------------------------*/
                          ENDP

000066  0000              DCW      0x0000
                  |L1.104|
                          DCD      ||.bss||
                  |L1.108|
                          DCD      0x40010c00
                  |L1.112|
                          DCD      ||.constdata||
                  |L1.116|
                          DCD      0x408f4000

                          AREA ||i.RTD_init||, CODE, READONLY, ALIGN=2

                  RTD_init PROC
;;;52     /*----------------------------------interface function definition----------------------------------*/
;;;53     void RTD_init(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;54     {
;;;55         GPIO_InitTypeDef GPIO_InitStructure;
;;;56         
;;;57         RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOG, ENABLE);
000002  2101              MOVS     r1,#1
000004  020e              LSLS     r6,r1,#8
000006  4630              MOV      r0,r6
000008  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;58         RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
00000c  2101              MOVS     r1,#1
00000e  2008              MOVS     r0,#8
000010  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;59         
;;;60         GPIO_InitStructure.GPIO_Pin = (SPI_MOSI_RTD_PIN) | (SPI_SCLK_RTD_PIN) ;
000014  f44f4020          MOV      r0,#0xa000
000018  f8ad0000          STRH     r0,[sp,#0]
;;;61         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00001c  2403              MOVS     r4,#3
;;;62         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
;;;63         GPIO_Init(GPIOG, &GPIO_InitStructure);
00001e  4f18              LDR      r7,|L2.128|
000020  f88d4002          STRB     r4,[sp,#2]            ;61
000024  2510              MOVS     r5,#0x10              ;62
000026  f88d5003          STRB     r5,[sp,#3]            ;62
00002a  4669              MOV      r1,sp
00002c  4638              MOV      r0,r7
00002e  f7fffffe          BL       GPIO_Init
;;;64         
;;;65         GPIO_InitStructure.GPIO_Pin = (SPI_MISO_RTD_PIN);
000032  02a8              LSLS     r0,r5,#10
000034  f8ad0000          STRH     r0,[sp,#0]
;;;66         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000038  f88d4002          STRB     r4,[sp,#2]
;;;67         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;
00003c  2048              MOVS     r0,#0x48
00003e  f88d0003          STRB     r0,[sp,#3]
;;;68         GPIO_Init(GPIOG, &GPIO_InitStructure);
000042  4669              MOV      r1,sp
000044  4638              MOV      r0,r7
000046  f7fffffe          BL       GPIO_Init
;;;69         
;;;70         GPIO_InitStructure.GPIO_Pin =  (SPI_CS_RTD_0_PIN) | (SPI_CS_RTD_1_PIN) ;
00004a  01e0              LSLS     r0,r4,#7
00004c  f8ad0000          STRH     r0,[sp,#0]
;;;71         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000050  f88d4002          STRB     r4,[sp,#2]
;;;72         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
;;;73         GPIO_Init(GPIOB, &GPIO_InitStructure);
000054  4c0b              LDR      r4,|L2.132|
000056  f88d5003          STRB     r5,[sp,#3]            ;72
00005a  4669              MOV      r1,sp
00005c  4620              MOV      r0,r4
00005e  f7fffffe          BL       GPIO_Init
;;;74         
;;;75         
;;;76         SPI_RTD_SCLK_CLR();
000062  1461              ASRS     r1,r4,#17
000064  4638              MOV      r0,r7
000066  f7fffffe          BL       GPIO_ResetBits
;;;77         delay_rtd();
00006a  f7fffffe          BL       delay_rtd
;;;78         SPI_RTD_CS0_SET();
00006e  2180              MOVS     r1,#0x80
000070  4620              MOV      r0,r4
000072  f7fffffe          BL       GPIO_SetBits
;;;79         SPI_RTD_CS1_SET();
000076  4631              MOV      r1,r6
000078  4620              MOV      r0,r4
00007a  f7fffffe          BL       GPIO_SetBits
;;;80     }
00007e  bdf8              POP      {r3-r7,pc}
;;;81     
                          ENDP

                  |L2.128|
                          DCD      0x40012000
                  |L2.132|
                          DCD      0x40010c00

                          AREA ||i.RTD_onechannel||, CODE, READONLY, ALIGN=2

                  RTD_onechannel PROC
;;;81     
;;;82     void RTD_onechannel(int channel,float* temperature)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;83     {
000004  4605              MOV      r5,r0
000006  4688              MOV      r8,r1
;;;84         uint8_t *dp;   
;;;85         int i;
;;;86         
;;;87         delay_rtd();
000008  f7fffffe          BL       delay_rtd
;;;88         dp = (void *)& rtd_bytes.b55;
;;;89         SPI_RTD_CS0_CLR();
00000c  f8df9058          LDR      r9,|L3.104|
000010  4e14              LDR      r6,|L3.100|
000012  2180              MOVS     r1,#0x80
000014  4648              MOV      r0,r9
000016  f7fffffe          BL       GPIO_ResetBits
;;;90         delay_rtd();
00001a  f7fffffe          BL       delay_rtd
;;;91         for (i = 0; i < sizeof(RTD_BYTES); ++i) 
;;;92     	{
;;;93             dp[i] = rtd_read_write_byte(cmd[i]);
00001e  4f13              LDR      r7,|L3.108|
000020  2400              MOVS     r4,#0                 ;91
                  |L3.34|
000022  5d38              LDRB     r0,[r7,r4]
000024  f7fffffe          BL       rtd_read_write_byte
000028  5530              STRB     r0,[r6,r4]
;;;94             delay_rtd();
00002a  f7fffffe          BL       delay_rtd
00002e  1c64              ADDS     r4,r4,#1              ;91
000030  2c14              CMP      r4,#0x14              ;91
000032  d3f6              BCC      |L3.34|
;;;95         } 
;;;96         SPI_RTD_CS0_SET();
000034  2180              MOVS     r1,#0x80
000036  4648              MOV      r0,r9
000038  f7fffffe          BL       GPIO_SetBits
;;;97     	if(channel<4 && channel>=0)
00003c  2d04              CMP      r5,#4
00003e  d20e              BCS      |L3.94|
;;;98         temperature[channel] =  rtd_bytes.temp[channel]/1000.0;
000040  4808              LDR      r0,|L3.100|
000042  eb000085          ADD      r0,r0,r5,LSL #2
000046  f8d00002          LDR      r0,[r0,#2]
00004a  f7fffffe          BL       __aeabi_i2d
00004e  2200              MOVS     r2,#0
000050  4b07              LDR      r3,|L3.112|
000052  f7fffffe          BL       __aeabi_ddiv
000056  f7fffffe          BL       __aeabi_d2f
00005a  f8480025          STR      r0,[r8,r5,LSL #2]
                  |L3.94|
;;;99     }
00005e  e8bd87f0          POP      {r4-r10,pc}
;;;100    
                          ENDP

000062  0000              DCW      0x0000
                  |L3.100|
                          DCD      ||.bss||
                  |L3.104|
                          DCD      0x40010c00
                  |L3.108|
                          DCD      ||.constdata||
                  |L3.112|
                          DCD      0x408f4000

                          AREA ||i.delay_rtd||, CODE, READONLY, ALIGN=1

                  delay_rtd PROC
;;;148    
;;;149    void delay_rtd(void)
000000  f44f70fa          MOV      r0,#0x1f4
                  |L4.4|
;;;150    {
;;;151        volatile int ___j = 500;	
;;;152        while(___j--);	
000004  0001              MOVS     r1,r0
000006  f1a00001          SUB      r0,r0,#1
00000a  d1fb              BNE      |L4.4|
;;;153    }
00000c  4770              BX       lr
;;;154    
                          ENDP


                          AREA ||i.rtd_read_write_byte||, CODE, READONLY, ALIGN=2

                  rtd_read_write_byte PROC
;;;121    /*----------------------------------------local function definition---------------------------------*/
;;;122    uint8_t rtd_read_write_byte(uint8_t c)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;123    {
;;;124        int i;
;;;125        uint8_t res = 0;
000004  2400              MOVS     r4,#0
;;;126        
;;;127        for (i = 0; i < 8; ++i) {
;;;128            res <<= 1;
;;;129            SPI_RTD_SCLK_SET();
000006  4f18              LDR      r7,|L5.104|
000008  4606              MOV      r6,r0                 ;123
00000a  4625              MOV      r5,r4                 ;127
;;;130            if(c&0x80){
;;;131                SPI_RTD_MOSI_SET();
00000c  f44f4900          MOV      r9,#0x8000
000010  f44f5800          MOV      r8,#0x2000            ;129
;;;132            }
;;;133            else{
;;;134                SPI_RTD_MOSI_CLR();
;;;135            }
;;;136            
;;;137            delay_rtd();
;;;138            SPI_RTD_SCLK_CLR();
;;;139            delay_rtd();
;;;140            if(SPI_RTD_MISO_PIN()){
000014  f44f4a80          MOV      r10,#0x4000
                  |L5.24|
000018  0660              LSLS     r0,r4,#25             ;128
00001a  0e04              LSRS     r4,r0,#24             ;128
00001c  4641              MOV      r1,r8                 ;129
00001e  4638              MOV      r0,r7                 ;129
000020  f7fffffe          BL       GPIO_SetBits
000024  0630              LSLS     r0,r6,#24             ;130
000026  4649              MOV      r1,r9                 ;134
000028  4638              MOV      r0,r7                 ;134
00002a  d502              BPL      |L5.50|
00002c  f7fffffe          BL       GPIO_SetBits
000030  e001              B        |L5.54|
                  |L5.50|
000032  f7fffffe          BL       GPIO_ResetBits
                  |L5.54|
000036  f7fffffe          BL       delay_rtd
00003a  4641              MOV      r1,r8                 ;138
00003c  4638              MOV      r0,r7                 ;138
00003e  f7fffffe          BL       GPIO_ResetBits
000042  f7fffffe          BL       delay_rtd
000046  4651              MOV      r1,r10
000048  4638              MOV      r0,r7
00004a  f7fffffe          BL       GPIO_ReadInputDataBit
00004e  2801              CMP      r0,#1
000050  d101              BNE      |L5.86|
;;;141                res |= 1;
000052  f0440401          ORR      r4,r4,#1
                  |L5.86|
;;;142            }
;;;143            c <<= 1;
000056  0670              LSLS     r0,r6,#25
000058  0e06              LSRS     r6,r0,#24
00005a  1c6d              ADDS     r5,r5,#1              ;127
00005c  2d08              CMP      r5,#8                 ;127
00005e  dbdb              BLT      |L5.24|
;;;144        }
;;;145        
;;;146        return res;
000060  4620              MOV      r0,r4
;;;147    }
000062  e8bd87f0          POP      {r4-r10,pc}
;;;148    
                          ENDP

000066  0000              DCW      0x0000
                  |L5.104|
                          DCD      0x40012000

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  rtd_bytes
                          %        20

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  ||cmd||
000000  01020300          DCB      0x01,0x02,0x03,0x00
                          %        8
