; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -opid.o --asm_dir=.\ --list_dir=.\ --depend=pid.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\ -I..\..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\..\Utilities\STM32_EVAL -I..\..\..\Utilities\STM32_EVAL\Common -I..\..\..\Utilities\STM32_EVAL\STM3210E_EVAL -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210E_EVAL --omf_browse=pid.crf ..\pid.c]
                          THUMB

                          AREA ||i.PID_Calcu||, CODE, READONLY, ALIGN=2

                  PID_Calcu PROC
;;;35     //采用位置式PID算法，计算执行器的当前给定
;;;36     float PID_Calcu(int ith,float pv)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;37     {
;;;38     	float out;
;;;39         float err;        //当前的偏差 e(n)
;;;40     	float term1,term2,term3;
;;;41     	int i = ith;
;;;42     
;;;43     	err = (pid+i)->sp - pv;  //e(n)
000004  eb000280          ADD      r2,r0,r0,LSL #2
000008  4819              LDR      r0,|L1.112|
00000a  6800              LDR      r0,[r0,#0]  ; pid
00000c  eb0004c2          ADD      r4,r0,r2,LSL #3
000010  6a20              LDR      r0,[r4,#0x20]
000012  f7fffffe          BL       __aeabi_fsub
;;;44     	term1 = (pid+i)->Kp * (err - (pid+i)->last_err);
000016  69a5              LDR      r5,[r4,#0x18]
000018  4680              MOV      r8,r0                 ;43
00001a  4629              MOV      r1,r5
00001c  f7fffffe          BL       __aeabi_fsub
000020  68e1              LDR      r1,[r4,#0xc]
000022  f7fffffe          BL       __aeabi_fmul
000026  4606              MOV      r6,r0
;;;45     	term2 = (pid+i)->Ki * err;
000028  4641              MOV      r1,r8
00002a  6920              LDR      r0,[r4,#0x10]
00002c  f7fffffe          BL       __aeabi_fmul
000030  4681              MOV      r9,r0
;;;46     	term3 = (pid+i)->Kd * (err + (pid+i)->prev_err - 2 * (pid+i)->last_err);
000032  2101              MOVS     r1,#1
000034  4628              MOV      r0,r5
000036  f7fffffe          BL       __ARM_scalbnf
00003a  4607              MOV      r7,r0
00003c  4640              MOV      r0,r8
00003e  69e1              LDR      r1,[r4,#0x1c]
000040  f7fffffe          BL       __aeabi_fadd
000044  4639              MOV      r1,r7
000046  f7fffffe          BL       __aeabi_fsub
00004a  6961              LDR      r1,[r4,#0x14]
00004c  f7fffffe          BL       __aeabi_fmul
000050  4607              MOV      r7,r0
;;;47     	out = (pid+i)->last_out + term1 + term2 + term3;
000052  4631              MOV      r1,r6
000054  6a60              LDR      r0,[r4,#0x24]
000056  f7fffffe          BL       __aeabi_fadd
00005a  4649              MOV      r1,r9
00005c  f7fffffe          BL       __aeabi_fadd
000060  4639              MOV      r1,r7
000062  f7fffffe          BL       __aeabi_fadd
;;;48     	
;;;49     	(pid+i)->prev_err = (pid+i)->last_err; 
;;;50     	(pid+i)->last_err = err;
;;;51     	(pid+i)->last_out = out;
000066  6260              STR      r0,[r4,#0x24]
000068  e9c48506          STRD     r8,r5,[r4,#0x18]
;;;52     	return out;
;;;53     }
00006c  e8bd87f0          POP      {r4-r10,pc}
;;;54     
                          ENDP

                  |L1.112|
                          DCD      ||.data||

                          AREA ||i.PID_Initial||, CODE, READONLY, ALIGN=2

                  PID_Initial PROC
;;;10     ///对PID参数初始化
;;;11     void  PID_Initial()
000000  b5f0              PUSH     {r4-r7,lr}
;;;12     {
;;;13       int i;
;;;14       for(i=0;i<4;i++)
;;;15       {
;;;16     	 (pid+i)->T = 1;             //默认采样周期为1s
000002  480b              LDR      r0,|L2.48|
000004  2100              MOVS     r1,#0                 ;14
000006  2401              MOVS     r4,#1
;;;17     	 (pid+i)->Kp = 1;            //默认比例增益为 1
;;;18     	 (pid+i)->Ki = 0;            //默认积分增益为 0
;;;19     	 (pid+i)->Kd = 0;            //默认微分增益为 0
;;;20     	 (pid+i)->sp = 5.0;          //默认目标值是5.0
000008  4e0a              LDR      r6,|L2.52|
00000a  6803              LDR      r3,[r0,#0]            ;16
00000c  460a              MOV      r2,r1                 ;14
00000e  f04f557e          MOV      r5,#0x3f800000        ;17
;;;21     	 (pid+i)->last_out = 2.0;          //u0
000012  07a7              LSLS     r7,r4,#30
                  |L2.20|
000014  eb010081          ADD      r0,r1,r1,LSL #2       ;16
000018  eb0300c0          ADD      r0,r3,r0,LSL #3       ;16
00001c  1c49              ADDS     r1,r1,#1              ;14
00001e  6084              STR      r4,[r0,#8]            ;16
000020  e9c05203          STRD     r5,r2,[r0,#0xc]       ;16
000024  6142              STR      r2,[r0,#0x14]         ;19
000026  e9c06708          STRD     r6,r7,[r0,#0x20]      ;19
00002a  2904              CMP      r1,#4                 ;14
00002c  dbf2              BLT      |L2.20|
;;;22       }
;;;23     }
00002e  bdf0              POP      {r4-r7,pc}
;;;24     
                          ENDP

                  |L2.48|
                          DCD      ||.data||
                  |L2.52|
                          DCD      0x40a00000

                          AREA ||i.PID_SetValue||, CODE, READONLY, ALIGN=2

                  PID_SetValue PROC
;;;25     //读取上位机传递来的PID参数并赋值给PID参数全局变量
;;;26     void PID_SetValue(int ith,float Kp,float Ki, float Kd, float sp)
000000  b530              PUSH     {r4,r5,lr}
;;;27     {
;;;28          int i = ith;
;;;29     	 (pid+i)->Kp = Kp;
000002  eb000580          ADD      r5,r0,r0,LSL #2
000006  4804              LDR      r0,|L3.24|
000008  9c03              LDR      r4,[sp,#0xc]
00000a  6800              LDR      r0,[r0,#0]  ; pid
00000c  eb0000c5          ADD      r0,r0,r5,LSL #3
;;;30     	 (pid+i)->Ki = Ki;
;;;31     	 (pid+i)->Kd = Kd;
;;;32     	 (pid+i)->sp = sp;
000010  6204              STR      r4,[r0,#0x20]
000012  300c              ADDS     r0,r0,#0xc
000014  c00e              STM      r0!,{r1-r3}
;;;33     }
000016  bd30              POP      {r4,r5,pc}
;;;34     
                          ENDP

                  |L3.24|
                          DCD      ||.data||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  PidPar
                          %        160

                          AREA ||.data||, DATA, ALIGN=2

                  pid
                          DCD      PidPar
