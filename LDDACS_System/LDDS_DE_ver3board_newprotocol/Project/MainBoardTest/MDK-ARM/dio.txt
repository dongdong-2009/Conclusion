; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -odio.o --asm_dir=.\ --list_dir=.\ --depend=dio.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\ -I..\..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\..\Utilities\STM32_EVAL -I..\..\..\Utilities\STM32_EVAL\Common -I..\..\..\Utilities\STM32_EVAL\STM3210E_EVAL -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210E_EVAL --omf_browse=dio.crf ..\Dio.c]
                          THUMB

                          AREA ||i.DO_onechannel||, CODE, READONLY, ALIGN=2

                  DO_onechannel PROC
;;;52     }
;;;53     void DO_onechannel(u8 channel,u8 State)
000000  e92d03f0          PUSH     {r4-r9}
;;;54     {
;;;55     	switch(State)
;;;56     	{
;;;57     		case SpdtOFF:
;;;58     								switch(channel)
;;;59     								{
;;;60     									case 1:GPIO_ResetBits(Do_Port,Do1_Pin);break;
000004  4a26              LDR      r2,|L1.160|
000006  f44f7380          MOV      r3,#0x100
;;;61     									case 2:GPIO_ResetBits(Do_Port,Do2_Pin);break;
00000a  1554              ASRS     r4,r2,#21
;;;62     									case 3:GPIO_ResetBits(Do_Port,Do3_Pin);break;
00000c  1515              ASRS     r5,r2,#20
;;;63     									case 4:GPIO_ResetBits(Do_Port,Do4_Pin);break;
00000e  14d6              ASRS     r6,r2,#19
;;;64     									case 5:GPIO_ResetBits(Do_Port,Do5_Pin);break;
000010  1497              ASRS     r7,r2,#18
;;;65     									case 6:GPIO_ResetBits(Do_Port,Do6_Pin);break;
000012  f44f5c00          MOV      r12,#0x2000
;;;66     									case 7:GPIO_ResetBits(Do_Port,Do7_Pin);break;
000016  f44f4880          MOV      r8,#0x4000
;;;67     									case 8:GPIO_ResetBits(Do_Port,Do8_Pin);break;
00001a  f44f4900          MOV      r9,#0x8000
00001e  b151              CBZ      r1,|L1.54|
000020  2901              CMP      r1,#1                 ;55
000022  d139              BNE      |L1.152|
;;;68     									default:break;									
;;;69     								}
;;;70     								break;
;;;71     		case SpdtON:
;;;72     								switch(channel)
000024  2809              CMP      r0,#9
000026  d237              BCS      |L1.152|
000028  e8dff000          TBB      [pc,r0]
00002c  36222426          DCB      0x36,0x22,0x24,0x26
000030  282a2c2e          DCB      0x28,0x2a,0x2c,0x2e
000034  3000              DCB      0x30,0x00
                  |L1.54|
000036  2809              CMP      r0,#9                 ;58
000038  d22e              BCS      |L1.152|
00003a  e8dff000          TBB      [pc,r0]               ;58
00003e  2d05              DCB      0x2d,0x05
000040  07090b0d          DCB      0x07,0x09,0x0b,0x0d
000044  0f111300          DCB      0x0f,0x11,0x13,0x00
000048  4619              MOV      r1,r3                 ;60
00004a  e00c              B        |L1.102|
00004c  4621              MOV      r1,r4                 ;61
00004e  e00a              B        |L1.102|
000050  4629              MOV      r1,r5                 ;62
000052  e008              B        |L1.102|
000054  4631              MOV      r1,r6                 ;63
000056  e006              B        |L1.102|
000058  4639              MOV      r1,r7                 ;64
00005a  e004              B        |L1.102|
00005c  4661              MOV      r1,r12                ;65
00005e  e002              B        |L1.102|
000060  4641              MOV      r1,r8                 ;66
000062  e000              B        |L1.102|
000064  4649              MOV      r1,r9                 ;67
                  |L1.102|
000066  e8bd03f0          POP      {r4-r9}               ;67
00006a  4610              MOV      r0,r2                 ;67
00006c  f7ffbffe          B.W      GPIO_ResetBits
;;;73     								{
;;;74     									case 1:GPIO_SetBits(Do_Port,Do1_Pin);break;
000070  4619              MOV      r1,r3
000072  e00c              B        |L1.142|
;;;75     									case 2:GPIO_SetBits(Do_Port,Do2_Pin);break;
000074  4621              MOV      r1,r4
000076  e00a              B        |L1.142|
;;;76     									case 3:GPIO_SetBits(Do_Port,Do3_Pin);break;
000078  4629              MOV      r1,r5
00007a  e008              B        |L1.142|
;;;77     									case 4:GPIO_SetBits(Do_Port,Do4_Pin);break;
00007c  4631              MOV      r1,r6
00007e  e006              B        |L1.142|
;;;78     									case 5:GPIO_SetBits(Do_Port,Do5_Pin);break;
000080  4639              MOV      r1,r7
000082  e004              B        |L1.142|
;;;79     									case 6:GPIO_SetBits(Do_Port,Do6_Pin);break;
000084  4661              MOV      r1,r12
000086  e002              B        |L1.142|
;;;80     									case 7:GPIO_SetBits(Do_Port,Do7_Pin);break;
000088  4641              MOV      r1,r8
00008a  e000              B        |L1.142|
;;;81     									case 8:GPIO_SetBits(Do_Port,Do8_Pin);break;
00008c  4649              MOV      r1,r9
                  |L1.142|
00008e  e8bd03f0          POP      {r4-r9}
000092  4610              MOV      r0,r2
000094  f7ffbffe          B.W      GPIO_SetBits
                  |L1.152|
;;;82     									default:break;									
;;;83     								}
;;;84     								break;
;;;85     		default:break;
;;;86     	}
;;;87     }
000098  e8bd03f0          POP      {r4-r9}
00009c  4770              BX       lr
;;;88     
                          ENDP

00009e  0000              DCW      0x0000
                  |L1.160|
                          DCD      0x40011800

                          AREA ||i.DiGpioCfg||, CODE, READONLY, ALIGN=2

                  DiGpioCfg PROC
;;;32     
;;;2      void DiGpioCfg(void)
000000  b508              PUSH     {r3,lr}
;;;3      {
;;;4      	GPIO_InitTypeDef  GPIO_InitStructure;
;;;5      	
;;;6      	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOF, ENABLE);	 //使能PE端口时钟
000002  2101              MOVS     r1,#1
000004  2080              MOVS     r0,#0x80
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;7      
;;;8      	GPIO_InitStructure.GPIO_Pin = Di0_Pin|Di1_Pin|Di2_Pin|Di3_Pin|Di4_Pin|Di5_Pin|Di6_Pin|Di7_Pin;				 // 端口配置
00000a  f44f407f          MOV      r0,#0xff00
00000e  f8ad0000          STRH     r0,[sp,#0]
;;;9      	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING; 		 //输入
000012  2004              MOVS     r0,#4
000014  f88d0003          STRB     r0,[sp,#3]
;;;10     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
000018  2001              MOVS     r0,#1
00001a  f88d0002          STRB     r0,[sp,#2]
;;;11     	GPIO_Init(Di_Port, &GPIO_InitStructure);
00001e  4669              MOV      r1,sp
000020  4801              LDR      r0,|L2.40|
000022  f7fffffe          BL       GPIO_Init
;;;12     }
000026  bd08              POP      {r3,pc}
;;;13         
                          ENDP

                  |L2.40|
                          DCD      0x40011c00

                          AREA ||i.DioCfg||, CODE, READONLY, ALIGN=1

                  DioCfg PROC
;;;88     
;;;89     void DioCfg(void)
000000  b510              PUSH     {r4,lr}
;;;90     {
;;;91     	DoMuxGpioCfg();
000002  f7fffffe          BL       DoMuxGpioCfg
;;;92     	DiGpioCfg();
000006  e8bd4010          POP      {r4,lr}
00000a  f7ffbffe          B.W      DiGpioCfg
;;;93     }
;;;94     
                          ENDP


                          AREA ||i.DoMuxGpioCfg||, CODE, READONLY, ALIGN=2

                  DoMuxGpioCfg PROC
;;;13         
;;;14     void DoMuxGpioCfg(void)
000000  b538              PUSH     {r3-r5,lr}
;;;15     {
;;;16     	GPIO_InitTypeDef  GPIO_InitStructure;
;;;17     
;;;18     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOE, ENABLE);	 //使能PA端口时钟
000002  2101              MOVS     r1,#1
000004  2040              MOVS     r0,#0x40
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;19     	GPIO_ResetBits(Do_Port,Do1_Pin|Do2_Pin|Do3_Pin|Do4_Pin|Do5_Pin|Do6_Pin|Do7_Pin|Do8_Pin);
00000a  4d0a              LDR      r5,|L4.52|
00000c  f44f447f          MOV      r4,#0xff00
000010  4621              MOV      r1,r4
000012  4628              MOV      r0,r5
000014  f7fffffe          BL       GPIO_ResetBits
;;;20     	
;;;21     	GPIO_InitStructure.GPIO_Pin = Do1_Pin|Do2_Pin|Do3_Pin|Do4_Pin|Do5_Pin|Do6_Pin|Do7_Pin|Do8_Pin;				 // 端口配置
000018  f8ad4000          STRH     r4,[sp,#0]
;;;22     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP; 		 //推挽输出
00001c  2010              MOVS     r0,#0x10
00001e  f88d0003          STRB     r0,[sp,#3]
;;;23     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
000022  2001              MOVS     r0,#1
000024  f88d0002          STRB     r0,[sp,#2]
;;;24     	GPIO_Init(Do_Port, &GPIO_InitStructure);
000028  4669              MOV      r1,sp
00002a  4628              MOV      r0,r5
00002c  f7fffffe          BL       GPIO_Init
;;;25     }
000030  bd38              POP      {r3-r5,pc}
;;;26     
                          ENDP

000032  0000              DCW      0x0000
                  |L4.52|
                          DCD      0x40011800

                          AREA ||i.GetDiMap||, CODE, READONLY, ALIGN=2

                  GetDiMap PROC
;;;26     
;;;27     u8 GetDiMap(char* DiREG)
000000  b510              PUSH     {r4,lr}
;;;28     {
000002  4604              MOV      r4,r0
;;;29     	u16 temp; 
;;;30     	u8 i;
;;;31     	temp=GPIO_ReadInputData(Di_Port);
000004  4806              LDR      r0,|L5.32|
000006  f7fffffe          BL       GPIO_ReadInputData
;;;32     	
;;;33     	for(i=0;i<8;i++)
00000a  2100              MOVS     r1,#0
                  |L5.12|
;;;34     	{
;;;35     		DiREG[i]=temp&0x01;       
00000c  f0000201          AND      r2,r0,#1
000010  5462              STRB     r2,[r4,r1]
000012  1c49              ADDS     r1,r1,#1              ;33
;;;36     		temp>>=1;
000014  0840              LSRS     r0,r0,#1
000016  b2c9              UXTB     r1,r1                 ;33
000018  2908              CMP      r1,#8                 ;33
00001a  d3f7              BCC      |L5.12|
;;;37     	}
;;;38     
;;;39     	return (temp>>8)&0xff;
00001c  0a00              LSRS     r0,r0,#8
;;;40     }
00001e  bd10              POP      {r4,pc}
;;;41     u8 GetDiSingal(u8 channel)
                          ENDP

                  |L5.32|
                          DCD      0x40011c00

                          AREA ||i.GetDiSingal||, CODE, READONLY, ALIGN=1

                  GetDiSingal PROC
;;;40     }
;;;41     u8 GetDiSingal(u8 channel)
000000  b51c              PUSH     {r2-r4,lr}
;;;42     {
000002  4604              MOV      r4,r0
;;;43       u16 DiMap;
;;;44       u8  DiValue=0; 
;;;45       char temp[8];
;;;46       DiMap=GetDiMap(temp); 
000004  4668              MOV      r0,sp
000006  f7fffffe          BL       GetDiMap
;;;47       DiMap>>=channel;
00000a  40e0              LSRS     r0,r0,r4
;;;48       DiValue =DiMap&0x01;	  
00000c  f0000001          AND      r0,r0,#1
;;;49     
;;;50       return DiValue;
;;;51     
;;;52     }
000010  bd1c              POP      {r2-r4,pc}
;;;53     void DO_onechannel(u8 channel,u8 State)
                          ENDP

