; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\dac8554.o --asm_dir=.\ --list_dir=.\ --depend=.\dac8554.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I..\ -I..\..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\..\Utilities\STM32_EVAL -I..\..\..\Utilities\STM32_EVAL\Common -I..\..\..\Utilities\STM32_EVAL\STM3210E_EVAL -I.\RTE\_MainBoardForRTD -I"D:\software install\Keil\ARM\CMSIS\5.1.0\CMSIS\Include" -I"D:\software install\Keil\Keil\STM32F1xx_DFP\2.2.0\Device\Include" -D__MICROLIB -D__UVISION_VERSION=524 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210E_EVAL --omf_browse=.\dac8554.crf ..\DAC8554.c]
                          THUMB

                          AREA ||i.DAC8554_GPIO_Config||, CODE, READONLY, ALIGN=2

                  DAC8554_GPIO_Config PROC
;;;3      u16 Dat;
;;;4      void DAC8554_GPIO_Config(void)
000000  b538              PUSH     {r3-r5,lr}
;;;5      {
;;;6      	GPIO_InitTypeDef  GPIO_InitStructure;
;;;7      
;;;8      	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOD, ENABLE);	 //使能PA端口时钟
000002  2101              MOVS     r1,#1
000004  2020              MOVS     r0,#0x20
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;9      
;;;10     	GPIO_InitStructure.GPIO_Pin = SYNC_Pin | SCLK_Pin | DIN_Pin | LDAC_Pin;				 // 端口配置
00000a  200f              MOVS     r0,#0xf
00000c  f8ad0000          STRH     r0,[sp,#0]
;;;11     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP; 		 //推挽输出
000010  2010              MOVS     r0,#0x10
000012  f88d0003          STRB     r0,[sp,#3]
;;;12     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
000016  2001              MOVS     r0,#1
;;;13     	GPIO_Init(GPIOD, &GPIO_InitStructure);
000018  4c05              LDR      r4,|L1.48|
00001a  f88d0002          STRB     r0,[sp,#2]            ;12
00001e  4669              MOV      r1,sp
000020  4620              MOV      r0,r4
000022  f7fffffe          BL       GPIO_Init
;;;14     	GPIO_ResetBits(GPIOD,LDAC_Pin);
000026  2108              MOVS     r1,#8
000028  4620              MOV      r0,r4
00002a  f7fffffe          BL       GPIO_ResetBits
;;;15     }
00002e  bd38              POP      {r3-r5,pc}
;;;16     
                          ENDP

                  |L1.48|
                          DCD      0x40011400

                          AREA ||i.DAC8554_Send_24_bits||, CODE, READONLY, ALIGN=2

                  DAC8554_Send_24_bits PROC
;;;22     
;;;23     void DAC8554_Send_24_bits(unsigned int data)  // data是一个24位的数据,STM32中int型是32位的数据
000000  b570              PUSH     {r4-r6,lr}
;;;24     {
;;;25     	char i=0;
;;;26     
;;;27     	////////////////////////////////
;;;28     	SYNC_1();
000002  4e15              LDR      r6,|L2.88|
000004  4605              MOV      r5,r0                 ;24
000006  2201              MOVS     r2,#1
000008  2400              MOVS     r4,#0                 ;25
00000a  4611              MOV      r1,r2
00000c  4630              MOV      r0,r6
00000e  f7fffffe          BL       GPIO_WriteBit
;;;29     	DAC8554_delay();//////////SYNC脚一个高脉冲
000012  f7fffffe          BL       DAC8554_delay
;;;30     	SYNC_0();
000016  2200              MOVS     r2,#0
000018  2101              MOVS     r1,#1
00001a  4630              MOV      r0,r6
00001c  f7fffffe          BL       GPIO_WriteBit
                  |L2.32|
;;;31     	///////////////////////
;;;32     	for( i=0; i<24; i++ )
;;;33     	{
;;;34     		if((data&0x800000)  == 0x800000)
000020  0228              LSLS     r0,r5,#8
000022  d501              BPL      |L2.40|
;;;35     			DIN_1();  		
000024  2201              MOVS     r2,#1
000026  e000              B        |L2.42|
                  |L2.40|
;;;36     		else
;;;37     			DIN_0();
000028  2200              MOVS     r2,#0
                  |L2.42|
00002a  2104              MOVS     r1,#4
00002c  4630              MOV      r0,r6
00002e  f7fffffe          BL       GPIO_WriteBit
;;;38     			
;;;39     		SCLK_1();
000032  2201              MOVS     r2,#1
000034  2102              MOVS     r1,#2
000036  4630              MOV      r0,r6
000038  f7fffffe          BL       GPIO_WriteBit
;;;40     		DAC8554_delay();
00003c  f7fffffe          BL       DAC8554_delay
;;;41     		SCLK_0();
000040  2200              MOVS     r2,#0
000042  2102              MOVS     r1,#2
000044  4630              MOV      r0,r6
000046  f7fffffe          BL       GPIO_WriteBit
;;;42     		data=data<<1;
00004a  1c64              ADDS     r4,r4,#1
00004c  006d              LSLS     r5,r5,#1
00004e  b2e4              UXTB     r4,r4                 ;32
000050  2c18              CMP      r4,#0x18              ;32
000052  d3e5              BCC      |L2.32|
;;;43     	}	
;;;44     }
000054  bd70              POP      {r4-r6,pc}
;;;45     /*****************************************************
                          ENDP

000056  0000              DCW      0x0000
                  |L2.88|
                          DCD      0x40011400

                          AREA ||i.DAC8554_delay||, CODE, READONLY, ALIGN=1

                  DAC8554_delay PROC
;;;16     
;;;17     void DAC8554_delay(void)
000000  200a              MOVS     r0,#0xa
                  |L3.2|
;;;18     {
;;;19     	int x = 10;
000002  1e40              SUBS     r0,r0,#1
;;;20       while(--x);
000004  d1fd              BNE      |L3.2|
;;;21     }
000006  4770              BX       lr
;;;22     
                          ENDP


                          AREA ||i.SetAoOut||, CODE, READONLY, ALIGN=2

                  SetAoOut PROC
;;;49     ******************************************************/
;;;50     void SetAoOut(float Parm,u8 channel,u8 CurrentFlag)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;51     {
000004  460d              MOV      r5,r1
;;;52     	if(Parm<0)Parm=0;
000006  f1104fff          CMN      r0,#0x7f800000
00000a  d300              BCC      |L4.14|
00000c  2000              MOVS     r0,#0
                  |L4.14|
;;;53     	switch(CurrentFlag)
;;;54     	{
;;;55     		case 0:if(Parm>9.999)Parm=9.999;
;;;56     						break;
;;;57     		case 1:if(Parm>19.999)Parm=19.999;
;;;58     						break;
;;;59     		default:break;
;;;60     	}
;;;61     	switch(CurrentFlag)
;;;62     	{
;;;63     		case 0:Dat=Parm/2.0/5.0*65536;break;
00000e  4f32              LDR      r7,|L4.216|
000010  4c32              LDR      r4,|L4.220|
000012  f04f36ff          MOV      r6,#0xffffffff
000016  b112              CBZ      r2,|L4.30|
000018  2a01              CMP      r2,#1                 ;53
00001a  d118              BNE      |L4.78|
00001c  e013              B        |L4.70|
                  |L4.30|
00001e  4930              LDR      r1,|L4.224|
000020  4288              CMP      r0,r1                 ;55
000022  dd00              BLE      |L4.38|
000024  4608              MOV      r0,r1                 ;55
                  |L4.38|
000026  f7fffffe          BL       __aeabi_f2d
                  |L4.42|
00002a  4632              MOV      r2,r6
00002c  f7fffffe          BL       __ARM_scalbn
000030  2200              MOVS     r2,#0
000032  463b              MOV      r3,r7
000034  f7fffffe          BL       __aeabi_ddiv
000038  2210              MOVS     r2,#0x10
00003a  f7fffffe          BL       __ARM_scalbn
00003e  f7fffffe          BL       __aeabi_d2uiz
000042  8020              STRH     r0,[r4,#0]
000044  e00b              B        |L4.94|
                  |L4.70|
000046  4927              LDR      r1,|L4.228|
000048  4288              CMP      r0,r1                 ;57
00004a  db00              BLT      |L4.78|
00004c  4608              MOV      r0,r1                 ;57
                  |L4.78|
00004e  2100              MOVS     r1,#0                 ;57
000050  2a01              CMP      r2,#1                 ;61
000052  d103              BNE      |L4.92|
;;;64     		case 1:
;;;65     			     if(Parm<=3.98406)                              //3.98406=20*10/(10+40.2)
000054  4a24              LDR      r2,|L4.232|
000056  4290              CMP      r0,r2
000058  da0a              BGE      |L4.112|
;;;66     					 {
;;;67     						 Dat=0;
00005a  8021              STRH     r1,[r4,#0]
                  |L4.92|
;;;68     					 }
;;;69     					 else
;;;70     					 {
;;;71     						 Dat=(Parm-3.98406)/(20.08-3.98406)*10/2/5*65536;break;
;;;72     					 }
;;;73     		default:Dat=0;
00005c  8021              STRH     r1,[r4,#0]
                  |L4.94|
;;;74     	}
;;;75     	switch(channel) 
00005e  2d09              CMP      r5,#9
000060  d238              BCS      |L4.212|
000062  e8dff005          TBB      [pc,r5]
000066  3714              DCB      0x37,0x14
000068  181c2024          DCB      0x18,0x1c,0x20,0x24
00006c  282c3000          DCB      0x28,0x2c,0x30,0x00
                  |L4.112|
000070  f7fffffe          BL       __aeabi_f2d
000074  4a1d              LDR      r2,|L4.236|
000076  4b1e              LDR      r3,|L4.240|
000078  f7fffffe          BL       __aeabi_dsub
00007c  4a1d              LDR      r2,|L4.244|
00007e  4b1e              LDR      r3,|L4.248|
000080  f7fffffe          BL       __aeabi_ddiv
000084  2200              MOVS     r2,#0                 ;71
000086  4b1d              LDR      r3,|L4.252|
000088  f7fffffe          BL       __aeabi_dmul
00008c  e7cd              B        |L4.42|
;;;76     	{ 
;;;77     		case 1:DAC8554_Send_24_bits((0x00100000|0x00000000)+Dat);break;
00008e  8820              LDRH     r0,[r4,#0]  ; Dat
000090  f5001080          ADD      r0,r0,#0x100000
000094  e01a              B        |L4.204|
;;;78     		case 2:DAC8554_Send_24_bits((0x00100000|0x00020000)+Dat);break;
000096  8820              LDRH     r0,[r4,#0]  ; Dat
000098  f5001090          ADD      r0,r0,#0x120000
00009c  e016              B        |L4.204|
;;;79     		case 3:DAC8554_Send_24_bits((0x00100000|0x00040000)+Dat);break;
00009e  8820              LDRH     r0,[r4,#0]  ; Dat
0000a0  f50010a0          ADD      r0,r0,#0x140000
0000a4  e012              B        |L4.204|
;;;80     		case 4:DAC8554_Send_24_bits((0x00100000|0x00060000)+Dat);break;
0000a6  8820              LDRH     r0,[r4,#0]  ; Dat
0000a8  f50010b0          ADD      r0,r0,#0x160000
0000ac  e00e              B        |L4.204|
;;;81     		case 5:DAC8554_Send_24_bits((0x00500000|0x00000000)+Dat);break;
0000ae  8820              LDRH     r0,[r4,#0]  ; Dat
0000b0  f50000a0          ADD      r0,r0,#0x500000
0000b4  e00a              B        |L4.204|
;;;82     		case 6:DAC8554_Send_24_bits((0x00500000|0x00020000)+Dat);break;
0000b6  8820              LDRH     r0,[r4,#0]  ; Dat
0000b8  f50000a4          ADD      r0,r0,#0x520000
0000bc  e006              B        |L4.204|
;;;83     		case 7:DAC8554_Send_24_bits((0x00500000|0x00040000)+Dat);break;
0000be  8820              LDRH     r0,[r4,#0]  ; Dat
0000c0  f50000a8          ADD      r0,r0,#0x540000
0000c4  e002              B        |L4.204|
;;;84     		case 8:DAC8554_Send_24_bits((0x00500000|0x00060000)+Dat);break;
0000c6  8820              LDRH     r0,[r4,#0]  ; Dat
0000c8  f50000ac          ADD      r0,r0,#0x560000
                  |L4.204|
0000cc  e8bd41f0          POP      {r4-r8,lr}
0000d0  f7ffbffe          B.W      DAC8554_Send_24_bits
                  |L4.212|
;;;85     		default:break;
;;;86     	}
;;;87     }	
0000d4  e8bd81f0          POP      {r4-r8,pc}
                          ENDP

                  |L4.216|
                          DCD      0x40140000
                  |L4.220|
                          DCD      ||.data||
                  |L4.224|
                          DCD      0x411ffbe7
                  |L4.228|
                          DCD      0x419ffdf4
                  |L4.232|
                          DCD      0x407efad7
                  |L4.236|
                          DCD      0xd96a6a01
                  |L4.240|
                          DCD      0x400fdf5a
                  |L4.244|
                          DCD      0x861a60d4
                  |L4.248|
                          DCD      0x4030188f
                  |L4.252|
                          DCD      0x40240000

                          AREA ||.data||, DATA, ALIGN=1

                  ||Dat||
000000  0000              DCB      0x00,0x00
